<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>前端博客</title>
  <subtitle>点点滴滴，记录前端学习笔记</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://caoweiqiang.com/"/>
  <updated>2017-06-09T10:30:04.566Z</updated>
  <id>http://caoweiqiang.com/</id>
  
  <author>
    <name>cwq</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>CSS多行文字超出隐藏加省略号</title>
    <link href="http://caoweiqiang.com/css-hidden/"/>
    <id>http://caoweiqiang.com/css-hidden/</id>
    <published>2017-06-09T10:22:19.875Z</published>
    <updated>2017-06-09T10:30:04.566Z</updated>
    
    <content type="html"><![CDATA[<p>如果实现单行文本的溢出显示省略号同学们应该都知道用text-overflow:ellipsis属性来，当然还需要加宽度width属来兼容部分浏览。</p>
<blockquote>
<p>实现方法：</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">   overflow:hidden;</div><div class="line">text-overflow:ellipsis;</div><div class="line">white-space:nowrap;</div></pre></td></tr></table></figure>
<blockquote>
<p>效果如图：</p>
</blockquote>
<p><img src="http://img.caibaojian.com/uploads/2017/05/dome1.png" alt="img"></p>
<p>但是这个属性只支持单行文本的溢出显示省略号，如果我们要实现多行文本溢出显示省略号呢。</p>
<p>接下来重点说一说多行文本溢出显示省略号，如下。</p>
<blockquote>
<p>方法1：使用纯css3</p>
</blockquote>
<p>一个外国的网站实现的纯CSS多行超出隐藏加省略号。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">   $font-size: <span class="number">26</span>px;</div><div class="line">$line-height: <span class="number">1.4</span>;</div><div class="line">$lines-to-show: <span class="number">3</span>;</div><div class="line"></div><div class="line">h2 &#123;</div><div class="line">  <span class="attr">display</span>: block; <span class="comment">/* Fallback for non-webkit */</span></div><div class="line">  display: -webkit-box;</div><div class="line">  max-width: <span class="number">400</span>px;</div><div class="line">  height: $font-size*$line-height*$lines-to-show; <span class="comment">/* Fallback for non-webkit */</span></div><div class="line">  margin: <span class="number">0</span> auto;</div><div class="line">  font-size: $font-size;</div><div class="line">  line-height: $line-height;</div><div class="line">  -webkit-line-clamp: $lines-to-show;</div><div class="line">  -webkit-box-orient: vertical;</div><div class="line">  overflow: hidden;</div><div class="line">  text-overflow: ellipsis;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>编译出来为：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">h2 &#123;</div><div class="line"> <span class="attr">display</span>: block;</div><div class="line"> display: -webkit-box;</div><div class="line"> max-width: <span class="number">400</span>px;</div><div class="line"> height: <span class="number">109.2</span>px;</div><div class="line"> margin: <span class="number">0</span> auto;</div><div class="line"> font-size: <span class="number">26</span>px;</div><div class="line"> line-height: <span class="number">1.4</span>;</div><div class="line"> -webkit-line-clamp: <span class="number">3</span>;</div><div class="line"> -webkit-box-orient: vertical;</div><div class="line"> overflow: hidden;</div><div class="line"> text-overflow: ellipsis;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>效果如图：</p>
<p><img src="http://img.caibaojian.com/uploads/2017/05/dome2.png" alt="img"></p>
<p>适用范围：</p>
<p>因使用了WebKit的CSS扩展属性，该方法适用于WebKit浏览器及移动端；</p>
<p>注：</p>
<p>1、-webkit-line-clamp用来限制在一个块元素显示的文本的行数。 为了实现该效果，它需要组合其他的WebKit属性。常见结合属性：<br>2、display: -webkit-box; 必须结合的属性 ，将对象作为弹性伸缩盒子模型显示 。<br>3、-webkit-box-orient 必须结合的属性 ，设置或检索伸缩盒对象的子元素的排列方式 。</p>
<blockquote>
<p>方法2：使用伪元素加绝对定位</p>
</blockquote>
<p>实现方法：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">   p &#123;</div><div class="line">	position:relative;</div><div class="line">	line-height:20px;</div><div class="line">	max-height:40px;</div><div class="line">	overflow:hidden;</div><div class="line">&#125;</div><div class="line">p::after &#123;</div><div class="line">	content: "\02026";      // '...'</div><div class="line">	position:absolute;</div><div class="line">	bottom:0;</div><div class="line">	right:0;</div><div class="line">	padding-left:40px;</div><div class="line">	background:-webkit-linear-gradient(left,transparent,#fff 55%);</div><div class="line">	background:-o-linear-gradient(right,transparent,#fff 55%);</div><div class="line">	background:-moz-linear-gradient(right,transparent,#fff 55%);</div><div class="line">	background:linear-gradient(to right,transparent,#fff 55%);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>效果如图：</p>
<p><img src="http://img.caibaojian.com/uploads/2017/05/dome3.png" alt="img"></p>
<p>适用范围：</p>
<p>该方法适用范围广，但文字未超出行的情况下也会出现省略号,可结合js优化该方法。</p>
<p>注：</p>
<p>1、将height设置为line-height的整数倍，防止超出的文字露出。<br>2、给p::after添加渐变背景可避免文字只显示一半。<br>3、由于ie6-7不显示content内容，所以要添加标签兼容ie6-7（如：<span>…<span>）；兼容ie8需要将::after替换成:after。</span></span></p>
<p>转载：<a href="http://caibaojian.com/multiline-text-with-ellipsis.html" target="_blank" rel="external">http://caibaojian.com/multiline-text-with-ellipsis.html</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;如果实现单行文本的溢出显示省略号同学们应该都知道用text-overflow:ellipsis属性来，当然还需要加宽度width属来兼容部分浏览。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;实现方法：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;high
    
    </summary>
    
    
      <category term="CSS" scheme="http://caoweiqiang.com/tags/CSS/"/>
    
      <category term="CSS多行文字超出隐藏加省略号" scheme="http://caoweiqiang.com/tags/CSS%E5%A4%9A%E8%A1%8C%E6%96%87%E5%AD%97%E8%B6%85%E5%87%BA%E9%9A%90%E8%97%8F%E5%8A%A0%E7%9C%81%E7%95%A5%E5%8F%B7/"/>
    
  </entry>
  
  <entry>
    <title>《web前端最佳实践》—高性能css</title>
    <link href="http://caoweiqiang.com/web-css/"/>
    <id>http://caoweiqiang.com/web-css/</id>
    <published>2017-06-09T09:55:20.832Z</published>
    <updated>2017-06-09T10:18:40.781Z</updated>
    
    <content type="html"><![CDATA[<p>性能，这个词如今被炒的很热，也是每个开发者，由“知道”、“会做”之后必经的一个“怎样做好”的阶段。性能关乎用户在不同设备和不同网络状态下的体验。也被多方面因素所影响。此文说说css方面怎样做到高性能。</p>
<h1 id="高性能css"><a href="#高性能css" class="headerlink" title="高性能css"></a>高性能css</h1><p>Html和css本身的性能问题并不突出，在提高可读性和可维护性的前提下，如果能让代码运行和解析的速度更快，则是锦上添花了。</p>
<blockquote>
<p>一、使用高效css选择器</p>
</blockquote>
<p>简单来说，能被浏览器快速解析和匹配的css选择器，就是高效的选择器。</p>
<p>首先要知道浏览器如何解析css</p>
<p>举个例子：<span style="background:#f5f2f0;color:#d14;border:1px solid #e1e1e8;border-radius:.3em;padding:.1em;">.nav ul.list li div{}</span></p>
<p>我们常见的思维是，先去找到<span style="background:#f5f2f0;color:#d14;border:1px solid #e1e1e8;border-radius:.3em;padding:.1em;">nav</span>这个类，再找类包含的<span style="background:#f5f2f0;color:#d14;border:1px solid #e1e1e8;border-radius:.3em;padding:.1em;">ul</span>，再找<span style="background:#f5f2f0;color:#d14;border:1px solid #e1e1e8;border-radius:.3em;padding:.1em;">ul</span>中类为<span style="background:#f5f2f0;color:#d14;border:1px solid #e1e1e8;border-radius:.3em;padding:.1em;">list</span>的后代所有<span style="background:#f5f2f0;color:#d14;border:1px solid #e1e1e8;border-radius:.3em;padding:.1em;">li</span>中所有的<span style="background:#f5f2f0;color:#d14;border:1px solid #e1e1e8;border-radius:.3em;padding:.1em;">div</span>，简而言之，就是从左到右。可事实是这样么？么？么？~</p>
<p>事实是相反的！意味着什么呢？就是说它不是从第一个开始去慢慢的缩小范围，而是从<span style="background:#f5f2f0;color:#d14;border:1px solid #e1e1e8;border-radius:.3em;padding:.1em;">div</span>这个“裸奔”的盒子开始，相当于遍历，然后再找到<span style="background:#f5f2f0;color:#d14;border:1px solid #e1e1e8;border-radius:.3em;padding:.1em;">li</span>，以此类推，好吧不用我形容你应该知道这当中的消耗。理解这一原理非常重要，高效的选择器意味着匹配更快，查找次数更少。所以我们定义选择器时，应该让第一次匹配时的数量达到最少，并且让整体的匹配查找次数最少。</p>
<p>以上这些解释恰恰遵循了这样一些原则</p>
<p>（1）避免使用通配符</p>
<p>（2）避免使用标签选择器和单个属性选择器作为关键选择器</p>
<p>（3）不要在id选择器前加标签名</p>
<p>（4）尽量不要在选择符定义过多层级，层级越少，同时也降低了css和dom结构的耦合程度，提高样式的可维护性</p>
<p>（ps：老实说上面的这些“禁忌”你是不是都有犯过？~）</p>
<p>做个小结，以上所说，有两点需要知道，第一点在开头就已经提到，css的性能问题表现的并不突出，特别是在小项目中，所以，可维护性为先；第二点是虽然定义id选择器，有唯一性的优势，但是一个页面只能定义唯一id，定义过多id会使重用性降低，维护更困难，所以不建议多用id。</p>
<blockquote>
<p>二、css相关的图片处理</p>
</blockquote>
<p>现在的网页当中，图片所占的比重以及它的重要性大家都知道。那么如何处理好图片以及如何为图片设置样式，才能让用户打开网页时体验更好呢？下面给出一些意见：</p>
<p>（1）不给图片设置尺寸</p>
<p>在我个人的从业经历当中，有过这样的情况，我按照设计稿做好了页面，交给后台去测试，他就突然跑过来跟我说：hi，你看，这儿出状况了，我一看，坏菜，图片出格了，我才想起没有给图片定义宽高（直接从设计稿里切的也不需要），然后就犯错了似的在css样式里定义了宽高。以至于后来我把这个作为下次再做页面时候的注意事项。当我看到这一条意见的时候，才更知一二。</p>
<p>来看解释，第一、设计人员为了画面的精美，会制作一些超出需求尺寸的图片；第二、同一张图片可能会在页面不同地方多次使用，比如缩略图、正常图、大图。问题来了，如果图片原始尺寸和实际需求不同，在使用过程中就会存在性能问题，利用样式缩放会带来cpu的额外计算过程，增加了图片在浏览器的渲染时间，网络传输过程也会占更多带宽，增加下载时间。因此，最佳做法是，为需要的部分单独做一套图片，初始页面加载时就能更快展示。</p>
<p>（2）使用css“雪碧图“</p>
<p>是将零散的图片合并成一张大图，在利用css进行背景定位。好处是减少请求数，提高了图片整体的加载速度。</p>
<p>但它也存在一些缺点：</p>
<p>比如，多张图片合并成大图，需要精确计算，仔细的调整位置，单纯手工制作是一件很复杂的事情。（所幸现在有一些工具可以帮我们做）</p>
<p>另外，维护过程复杂，要尽量让已有的图片保持原来的位置不变，如果是背景图的尺寸发生变化导致原有区域无法放置，那就只好放弃，如果非要在原有位置修改，则剩余的图片样式都需要修改，是很繁琐的过程。新加的图片最好放在最后面。</p>
<p>还有就是使用不当会导致性能问题，最大的问题就是内存消耗。如果制作过程不做任何的规划，随意摆放，则可能会使图片变得相当大，从而很占内存。</p>
<p>下面是一些最佳实践：</p>
<p>1、在项目后期应用css sprite技术</p>
<p>因为一般在开发过程中，会比较频繁的修改或者更换图片，如果这个时候使用sprite技术，就会增加很多开发成本。</p>
<p>2、合理组织“雪碧”图</p>
<p>如果要把所有的图片放在一张图上面，也会有不妥，维护方面也不会很方便。组织背景图主要按照模块和背景图的风格来划分。比如，作为展示的缩略图放在一起，评论、点赞、上下箭头等图标放在一起等。</p>
<p>3、控制“雪碧”图的尺寸和大小</p>
<p>因为大尺寸的图片会占用大量的内存，所以要控制在合理尺寸，推荐长宽相乘不超过2500，大小在200kb内</p>
<p>4、合理控制背景图单元间的距离及背景图位置</p>
<p>这个原则是为了防止在背景图比元素大小更小的时候，区域出现别的无关背景图</p>
<p>5、借助相关工具处理sprite</p>
<blockquote>
<p>三、减少css的代码量</p>
</blockquote>
<p>提高网站整体加载速度的一个重要手段，就是提高代码文件的网络传输速度。除了代码压缩，精简代码也是一种手段。</p>
<p>（1）定义简洁的css规则</p>
<p>合并相关规则，定义简洁的属性值</p>
<p>合并规则是指比如font-family、font-size、font-weight等等，可以合并为font。 简洁属性值，比如颜色值：color，#33AAFF可以简化为#3AF等。</p>
<p>（2）合并相同定义</p>
<p>网页中总会有一些模块有较高相似度，则可把同样的部分共用一次定义，不同的部分再单独定义。而且在css中，很多属性是可以继承的，则只需要在合适的地方定义一次即可。</p>
<p>（3）删除无效的定义</p>
<p>无效的定义，并不会影响页面功能显示，但会影响页面展示的性能，增加代码量的同时，也增加了浏览器解析代码的时间。无效的定义包括无效的规则及无效的样式属性，一般是开发过程中引入的，而从直观上无法判断，这情况，可以用工具，chrome自带的工具就可以查找css中的无效样式。</p>
<blockquote>
<p>四、其他css高性能实践</p>
</blockquote>
<p>（1）避免使用@import</p>
<p>@import导入的新样式文件会阻止页面的并行下载，这样增加了文件的整体加载时间。</p>
<p>（2）避免使用IE浏览器独有样式：图片滤镜和css表达式</p>
<p>图片滤镜的使用会在图片加载时阻塞浏览器的加载和渲染，并会增加额外的内存开销。 Css表达式的作用是动态设置css属性，表达式不只是有兼容性问题，还有性能问题，例如浏览器大小改动、窗口改动时，会使得浏览器频繁计算，性能消耗极大。同样的效果可以用javascript来实现。</p>
<blockquote>
<p>五、css3最佳实践</p>
</blockquote>
<h4 id="查看浏览器支持情况"><a href="#查看浏览器支持情况" class="headerlink" title="查看浏览器支持情况"></a>查看浏览器支持情况</h4><p>在我们使用css3的过程中，问的最多的一个问题可能就是：兼容性如何？没办法，随着css的发展，它可以为我们之前遇到的很多不好解决的问题提供一个更好的方案，让我们忍不住去想能不能那样去做。PC端有饱受诟病的IE系列，到了移动端会好很多，但有些还是不太好。所以，查看浏览器支持情况几乎成了必备动作。 如果使用的特性仅仅是装饰点缀性的效果，不影响大局，则不需要考虑太多兼容问题，如果是出于设计要求，必须支持所有浏览器，则要特别的关注一下了。 开发者可以选择比如：caniuse.com、css3 Click Chart、css contents and browser compatibility这些在线工具来查看兼容性。</p>
<h4 id="添加必要的浏览器前缀"><a href="#添加必要的浏览器前缀" class="headerlink" title="添加必要的浏览器前缀"></a>添加必要的浏览器前缀</h4><p>对于刚使用css不久的朋友来说，如果偶尔在某网站源码当中看到诸如：“-webkit-、-moz-”等，可能会觉得很奇怪，这是什么？它们是对应不同的浏览器厂商所加上的前缀。</p>
<p>因为浏览器在支持css3时，可能仅仅实现了标准定义的一个早期版本，所以，尚不支持标准写法，给代码添加浏览器前缀也是无奈之举，会使得代码更多，更难维护。</p>
<p>但也不是为了“完美”而一定要去兼容所有的浏览器，一般可以按照浏览器或者系统的版本的市场占有率和目标用户使用浏览器的比例，来决定加不加前缀以及加几种前缀。而且相信随着逐步的发展，系统、浏览器的不断升级、更新，需要使用前缀的情况会减少。</p>
<p>问题又来了，既然需要添加必要的前缀，说明有些时候还是很有必要，那不得不加的情况下，那不是挺麻烦的？同样的一条规则要写三四遍，可能很多地方都要用，如何是好？别急，下面是几个对策：</p>
<p>1、使用工具来添加css属性的浏览器前缀</p>
<p>Prefixr，可以在开发的后期对代码进行处理。它会自动的添加需要的前缀和删去不必要的前缀。</p>
<p>Autoprefixer，如果想要在开发过程中更多的自主性，可以使用这个工具，开发者可以自定义浏览器支持范围，它也有多种使用方式，可以集成到多个开发环境中。 此外还有几种工具可供使用：cssFx、<em>css Agent</em>和-prefix-free。</p>
<p>2、借助css预处理技术</p>
<p>目前流行的有sass、less，具体方法是，针对css3样式特性定义一份模板样式。 优点是：避免大量重复代码，只需要维护一份定义。</p>
<p>3、不要过度添加浏览器前缀</p>
<p>有些开发者为了兼容所有浏览器，不管什么情况都为css代码加上了所有浏览器的前缀，这是一种消极的编码方式，增加了太多的重复代码，降低了浏览器的解析性能，增加了复杂度，同时某些前缀的属性可能没有被浏览器支持过。</p>
<p>4、添加css3标准属性定义</p>
<p>何为标准属性定义呢？就是不需要任何浏览器前缀，大家可能都会注意到，很多使用css3的地方都会在最后的地方写标准属性定义，为什么呢？因为当浏览器支持标准属性时，它可以覆盖前面添加了前缀的定义，css3中的属性标准定义才是符合规范的定义，添加了浏览器前缀的定义会随着浏览器的更新逐渐被淘汰。</p>
<p>当然，还有一点需要注意的是，某些属性，目前是属于Only webkit或者Only firefox的，那么就没有必要再写上标准定义及其他浏览器前缀了。</p>
<h4 id="做好css3中新特性的兼容处理"><a href="#做好css3中新特性的兼容处理" class="headerlink" title="做好css3中新特性的兼容处理"></a>做好css3中新特性的兼容处理</h4><p>说到兼容，就会提到低版本IE，比如很常见的圆角、透明图片等，有时候我们会给它们降级的处理，比如filter或者javascript，使用box-sizing、transform，推荐使用Modernizr,这个框架中包含了很多css3新特性的兼容方案。</p>
<p>无论是哪种方案，都会带来性能上的损耗，不能毫无章法的滥用，仍然是需要大家去权衡和选择。推荐一个如何更有效率的使用HTML5的建议网站：html5please。网站按照使用的方式把css3中的新特性分成了三类：</p>
<p>（1）直接使用</p>
<p>包含了大部分新特性，有些特性本身不会影响兼容性，如border-radius、media queries等，有些需要添加降级处理，如多背景图，要设置一个单背景图或者背景色作为备选。</p>
<p>（2）谨慎使用</p>
<p>这部分主要是性能问题，例如框阴影应用于占用很大区域的元素，页面滚动或鼠标悬停时，会引起不小性能问题。</p>
<p>（3）避免使用</p>
<p>这部分因为它们可能仅支持某个浏览器，比如倒影，则需要避免使用。</p>
<p>综上所述，css能够用来提高性能的方法还是蛮多的，但我们很容易忽略它们，因为它们所带来的影响似乎没有那么明显，而且，很多人可能为了图方便，任意挥洒着自己的才华，想怎么写就怎么写，能达到效果就行，这也有点小消极哈，忘了你的优秀工程师目标了麻？！~~css规则虽不不难，真正写好也不易，还是要有些追求极致的精神滴。诸君且写且珍惜吧！~</p>
<p>转载：<a href="http://www.html-js.com/article/Front-end-home-best-practice-in-front-of-the-web-high-performance-CSS" target="_blank" rel="external">http://www.html-js.com/article/Front-end-home-best-practice-in-front-of-the-web-high-performance-CSS</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;性能，这个词如今被炒的很热，也是每个开发者，由“知道”、“会做”之后必经的一个“怎样做好”的阶段。性能关乎用户在不同设备和不同网络状态下的体验。也被多方面因素所影响。此文说说css方面怎样做到高性能。&lt;/p&gt;
&lt;h1 id=&quot;高性能css&quot;&gt;&lt;a href=&quot;#高性能css
    
    </summary>
    
    
      <category term="web前端最佳实践" scheme="http://caoweiqiang.com/tags/web%E5%89%8D%E7%AB%AF%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/"/>
    
      <category term="高性能css" scheme="http://caoweiqiang.com/tags/%E9%AB%98%E6%80%A7%E8%83%BDcss/"/>
    
  </entry>
  
  <entry>
    <title>【Javascript】排序算法（冒泡排序，选择排序，插入排序，归并排序，快速排序）</title>
    <link href="http://caoweiqiang.com/js-sort/"/>
    <id>http://caoweiqiang.com/js-sort/</id>
    <published>2017-06-09T08:54:02.151Z</published>
    <updated>2017-06-09T10:18:44.935Z</updated>
    
    <content type="html"><![CDATA[<p>回头重新刷了一遍《学习Javascript数据结构与算法》这本书，并把其中的排序算法部分亲自动手实践了一遍，包括把原书里面比较啰嗦的代码精简了一些<br>目前共整理出了五种：冒泡排序,选择排序,插入排序,归并排序，快速排序(递归)<br>经典的排序算法有十种，剩下五种再慢慢研究</p>
<p>1、冒泡算法：比较任意两个相邻的项，如果第一个比第二个大，则交换顺序</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">   <span class="comment">/*冒泡排序*/</span></div><div class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; a.length; i++) &#123;</div><div class="line">	<span class="keyword">for</span> (<span class="keyword">var</span> j = i+<span class="number">1</span>; j &lt; a.length; j++) &#123;</div><div class="line">		<span class="keyword">if</span> (a[j] &lt; a[i]) &#123;</div><div class="line">			<span class="comment">// var t = a[i];</span></div><div class="line">			<span class="comment">// a[i] = a[j];</span></div><div class="line">			<span class="comment">// a[j] = t;</span></div><div class="line">			swap(i,j);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>2、选择排序：找到数组中最小的项并将其放到第一位，找到第二小的值，并将其放到第二位，依次排列</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">   <span class="comment">/*选择排序*/</span></div><div class="line"><span class="keyword">var</span> indexMin;</div><div class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; a.length<span class="number">-1</span>; i++) &#123;</div><div class="line">	<span class="comment">// 假设下标indexMin的值最小</span></div><div class="line">	indexMin = i;</div><div class="line">	<span class="keyword">for</span> (<span class="keyword">var</span> j = i+<span class="number">1</span>; j &lt; a.length; j++) &#123;</div><div class="line">		<span class="keyword">if</span> (a[indexMin] &gt; a[j]) &#123;</div><div class="line">			<span class="comment">// 交换最小值下标</span></div><div class="line">			indexMin = j;</div><div class="line">		&#125;	</div><div class="line">	&#125;</div><div class="line">	<span class="comment">// 如果找到的最小值跟原来设定的最小值不一样，交换其值</span></div><div class="line">	<span class="keyword">if</span> (i !== indexMin) &#123;</div><div class="line">		swap(i,indexMin);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>3、插入排序：每次只排序一个数组项，确定它应该插入到哪个位置</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">   <span class="comment">/*插入排序*/</span></div><div class="line"><span class="keyword">var</span> j,temp;</div><div class="line"><span class="comment">// 默认第一项已经排序，所以从第二项开始</span></div><div class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt; a.length; i++) &#123;</div><div class="line">	<span class="comment">// 辅助变量和值，存储当前下标和值</span></div><div class="line">	j = i;</div><div class="line">	temp = a[i];</div><div class="line">	<span class="comment">// 一直跟前一项比较，直到找到正确的位置插入</span></div><div class="line">	<span class="keyword">while</span> (j &gt; <span class="number">0</span> &amp;&amp; a[j<span class="number">-1</span>] &gt; temp)&#123;</div><div class="line">		<span class="comment">// 移到当前位置</span></div><div class="line">		a[j] = a[j<span class="number">-1</span>];</div><div class="line">		j--;</div><div class="line">	&#125;</div><div class="line">	a[j] = temp;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>4、归并排序（分治）：<br>   ①将数组拆分成较小的数组，直到每个数组的长度为1；<br>   ②合并和排序小数组，直到回到原始数组的长度；</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">   <span class="function"><span class="keyword">function</span> <span class="title">merge</span>(<span class="params">left, right</span>)</span>&#123;</div><div class="line">	<span class="keyword">var</span> result = [];</div><div class="line">	<span class="keyword">while</span> (left.length &gt; <span class="number">0</span> &amp;&amp; right.length &gt; <span class="number">0</span>)&#123;</div><div class="line">		<span class="comment">// 比较左边的数组的值是否被右边的小</span></div><div class="line">		<span class="keyword">if</span> (left[<span class="number">0</span>] &lt; right[<span class="number">0</span>])&#123;</div><div class="line">			result.push(left.shift());</div><div class="line">		&#125; <span class="keyword">else</span> &#123;</div><div class="line">			result.push(right.shift());</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> result.concat(left).concat(right);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">mergeSort</span>(<span class="params">arr</span>)</span>&#123;</div><div class="line">	<span class="comment">// 递归的停止条件</span></div><div class="line">	<span class="keyword">if</span> (arr.length == <span class="number">1</span>) &#123;</div><div class="line">		<span class="keyword">return</span> arr;</div><div class="line">	&#125;</div><div class="line">	<span class="comment">// 中间值取整，分成两个小组</span></div><div class="line">	<span class="keyword">var</span> middle = <span class="built_in">Math</span>.floor(arr.length / <span class="number">2</span>),</div><div class="line">		left = arr.slice(<span class="number">0</span>, middle),</div><div class="line">		right = arr.slice(middle);</div><div class="line">	<span class="comment">// 递归，对左右两部分数据进行合并排序</span></div><div class="line">	<span class="keyword">return</span> merge(mergeSort(left), mergeSort(right));</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>5、快速排序（分治）<br>   ①从数组中选择中间项目作为主元<br>   ②建立左右两个数组，分别存储左边和右边的数组<br>   ③利用递归进行下次比较</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">   <span class="comment">/*快速排序*/</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">quickSort</span>(<span class="params">arr</span>) </span>&#123;</div><div class="line">	<span class="keyword">if</span> (arr.length &lt;= <span class="number">1</span>) &#123;</div><div class="line">		<span class="keyword">return</span> arr;</div><div class="line">	&#125;</div><div class="line">	<span class="comment">// 取中间数作为基准索引，浮点数向下取整</span></div><div class="line">	<span class="keyword">var</span> index = <span class="built_in">Math</span>.floor(arr.length/<span class="number">2</span>);</div><div class="line">	<span class="comment">// 取得该值</span></div><div class="line">	<span class="keyword">var</span> pivot = arr.splice(index,<span class="number">1</span>);</div><div class="line">	<span class="comment">// 分别建立左右空数组，作为push所用</span></div><div class="line">	<span class="keyword">var</span> left = [];</div><div class="line">	<span class="keyword">var</span> right = [];</div><div class="line">	<span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</div><div class="line">		<span class="comment">// 基准左边的传到左数组,右边的传到右数组</span></div><div class="line">		<span class="keyword">if</span> (arr[i] &lt; pivot) &#123;</div><div class="line">			left.push(arr[i]);</div><div class="line">		&#125; <span class="keyword">else</span>&#123;</div><div class="line">			right.push(arr[i]);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="comment">// 不断递归重复比较</span></div><div class="line">	<span class="keyword">return</span> quickSort(left).concat(pivot,quickSort(right));</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>转载：<a href="http://www.qdfuns.com/notes/43245/286de03cc9d97d5bf4a88ce3d74237b6.html" target="_blank" rel="external">http://www.qdfuns.com/notes/43245/286de03cc9d97d5bf4a88ce3d74237b6.html</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;回头重新刷了一遍《学习Javascript数据结构与算法》这本书，并把其中的排序算法部分亲自动手实践了一遍，包括把原书里面比较啰嗦的代码精简了一些&lt;br&gt;目前共整理出了五种：冒泡排序,选择排序,插入排序,归并排序，快速排序(递归)&lt;br&gt;经典的排序算法有十种，剩下五种再慢慢
    
    </summary>
    
    
      <category term="Javascript" scheme="http://caoweiqiang.com/tags/Javascript/"/>
    
      <category term="排序算法" scheme="http://caoweiqiang.com/tags/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/"/>
    
      <category term="冒泡排序" scheme="http://caoweiqiang.com/tags/%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F/"/>
    
      <category term="选择排序" scheme="http://caoweiqiang.com/tags/%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F/"/>
    
      <category term="插入排序" scheme="http://caoweiqiang.com/tags/%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F/"/>
    
      <category term="归并排序" scheme="http://caoweiqiang.com/tags/%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F/"/>
    
      <category term="快速排序" scheme="http://caoweiqiang.com/tags/%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>H5项目常见问题汇总及解决方案</title>
    <link href="http://caoweiqiang.com/html5-summary/"/>
    <id>http://caoweiqiang.com/html5-summary/</id>
    <published>2017-06-08T02:01:21.106Z</published>
    <updated>2017-06-08T02:45:12.576Z</updated>
    
    <content type="html"><![CDATA[<h2 id="H5项目常见问题及注意事项"><a href="#H5项目常见问题及注意事项" class="headerlink" title="H5项目常见问题及注意事项"></a>H5项目常见问题及注意事项</h2><blockquote>
<p>Meta基础知识：</p>
</blockquote>
<ul>
<li>H5页面窗口自动调整到设备宽度，并禁止用户缩放页面</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//一、HTML页面结构</span></div><div class="line">&lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width,initial-scale=1.0,minimum-scale=1.0,maximum-scale=1.0,user-scalable=no"</span> /&gt;</div><div class="line"><span class="comment">// width    设置viewport宽度，为一个正整数，或字符串‘device-width’</span></div><div class="line"><span class="comment">// height   设置viewport高度，一般设置了宽度，会自动解析出高度，可以不用设置</span></div><div class="line"><span class="comment">// initial-scale    默认缩放比例，为一个数字，可以带小数</span></div><div class="line"><span class="comment">// minimum-scale    允许用户最小缩放比例，为一个数字，可以带小数</span></div><div class="line"><span class="comment">// maximum-scale    允许用户最大缩放比例，为一个数字，可以带小数</span></div><div class="line"><span class="comment">// user-scalable    是否允许手动缩放</span></div><div class="line"> </div><div class="line"><span class="comment">//二、JS动态判断</span></div><div class="line"><span class="keyword">var</span> phoneWidth =  <span class="built_in">parseInt</span>(<span class="built_in">window</span>.screen.width);</div><div class="line"><span class="keyword">var</span> phoneScale = phoneWidth/<span class="number">640</span>;</div><div class="line"><span class="keyword">var</span> ua = navigator.userAgent;</div><div class="line"><span class="keyword">if</span> (<span class="regexp">/Android (\d+\.\d+)/</span>.test(ua))&#123;</div><div class="line">    <span class="keyword">var</span> version = <span class="built_in">parseFloat</span>(<span class="built_in">RegExp</span>.$<span class="number">1</span>);</div><div class="line">    <span class="keyword">if</span>(version&gt;<span class="number">2.3</span>)&#123;</div><div class="line">        <span class="built_in">document</span>.write(<span class="string">'&lt;meta name="viewport" content="width=640, minimum-scale = '</span>+phoneScale+<span class="string">', maximum-scale = '</span>+phoneScale+<span class="string">', target-densitydpi=device-dpi"&gt;'</span>);</div><div class="line">    &#125;<span class="keyword">else</span>&#123;</div><div class="line">        <span class="built_in">document</span>.write(<span class="string">'&lt;meta name="viewport" content="width=640, target-densitydpi=device-dpi"&gt;'</span>);</div><div class="line">    &#125;</div><div class="line">&#125; <span class="keyword">else</span> &#123;</div><div class="line">    <span class="built_in">document</span>.write(<span class="string">'&lt;meta name="viewport" content="width=640, user-scalable=no, target-densitydpi=device-dpi"&gt;'</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>空白页基本meta标签</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&lt;!-- 设置缩放 --&gt;</div><div class="line">&lt;meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no, minimal-ui" /&gt;</div><div class="line">&lt;!-- 可隐藏地址栏，仅针对IOS的Safari（注：IOS7.0版本以后，safari上已看不到效果） --&gt;</div><div class="line">&lt;meta name="apple-mobile-web-app-capable" content="yes" /&gt;</div><div class="line">&lt;!-- 仅针对IOS的Safari顶端状态条的样式（可选default/black/black-translucent ） --&gt;</div><div class="line">&lt;meta name="apple-mobile-web-app-status-bar-style" content="black" /&gt;</div><div class="line">&lt;!-- IOS中禁用将数字识别为电话号码/忽略Android平台中对邮箱地址的识别 --&gt;</div><div class="line">&lt;meta name="format-detection" content="telephone=no, email=no" /&gt;</div></pre></td></tr></table></figure>
<ul>
<li>其他meta标签</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">&lt;!-- 启用<span class="number">360</span>浏览器的极速模式(webkit) --&gt;</div><div class="line">&lt;meta name="renderer" content="webkit"&gt;</div><div class="line">&lt;!-- 避免IE使用兼容模式 --&gt;</div><div class="line">&lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;</div><div class="line">&lt;!-- 针对手持设备优化，主要是针对一些老的不识别viewport的浏览器，比如黑莓 --&gt;</div><div class="line">&lt;meta name="HandheldFriendly" content="true"&gt;</div><div class="line">&lt;!-- 微软的老式浏览器 --&gt;</div><div class="line">&lt;meta name="MobileOptimized" content="320"&gt;</div><div class="line">&lt;!-- uc强制竖屏 --&gt;</div><div class="line">&lt;meta name="screen-orientation" content="portrait"&gt;</div><div class="line">&lt;!-- QQ强制竖屏 --&gt;</div><div class="line">&lt;meta name="x5-orientation" content="portrait"&gt;</div><div class="line">&lt;!-- UC强制全屏 --&gt;</div><div class="line">&lt;meta name="full-screen" content="yes"&gt;</div><div class="line">&lt;!-- QQ强制全屏 --&gt;</div><div class="line">&lt;meta name="x5-fullscreen" content="true"&gt;</div><div class="line">&lt;!-- UC应用模式 --&gt;</div><div class="line">&lt;meta name="browsermode" content="application"&gt;</div><div class="line">&lt;!-- QQ应用模式 --&gt;</div><div class="line">&lt;meta name="x5-page-mode" content="app"&gt;</div><div class="line">&lt;!-- windows phone 点击无高光 --&gt;</div><div class="line">&lt;meta name="msapplication-tap-highlight" content="no"&gt;</div></pre></td></tr></table></figure>
<blockquote>
<p>常见问题：</p>
</blockquote>
<ul>
<li>移动端如何定义字体font-family</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">@ --------------------------------------中文字体的英文名称</div><div class="line">@ 宋体      SimSun</div><div class="line">@ 黑体      SimHei</div><div class="line">@ 微信雅黑   Microsoft Yahei</div><div class="line">@ 微软正黑体 Microsoft JhengHei</div><div class="line">@ 新宋体    NSimSun</div><div class="line">@ 新细明体  MingLiU</div><div class="line">@ 细明体    MingLiU</div><div class="line">@ 标楷体    DFKai-SB</div><div class="line">@ 仿宋     FangSong</div><div class="line">@ 楷体     KaiTi</div><div class="line">@ 仿宋_GB2312  FangSong_GB2312</div><div class="line">@ 楷体_GB2312  KaiTi_GB2312  </div><div class="line">@</div><div class="line">@ 说明：中文字体多数使用宋体、雅黑，英文用Helvetica</div><div class="line"> </div><div class="line">body &#123; font-family: Microsoft Yahei,SimSun,Helvetica; &#125;</div></pre></td></tr></table></figure>
<ul>
<li>打电话发短信写邮件怎么实现</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">// 一、打电话</div><div class="line">&lt;a href="tel:0755-10086"&gt;打电话给:0755-10086&lt;/a&gt;</div><div class="line"> </div><div class="line">//  二、发短信，winphone系统无效</div><div class="line">&lt;a href="sms:10086"&gt;发短信给: 10086&lt;/a&gt;</div><div class="line"> </div><div class="line">// 三、写邮件</div><div class="line">//注：在添加这些功能时，第一个功能以"?"开头，后面的以"&amp;"开头</div><div class="line">//1.普通邮件</div><div class="line">&lt;a href="mailto:863139978@qq.com"&gt;点击我发邮件&lt;/a&gt;</div><div class="line">//2.收件地址后添加?cc=开头，可添加抄送地址（Android存在兼容问题）</div><div class="line">&lt;a href="mailto:863139978@qq.com?cc=zhangqian0406@yeah.net"&gt;点击我发邮件&lt;/a&gt;</div><div class="line">//3.跟着抄送地址后，写上&amp;bcc=,可添加密件抄送地址（Android存在兼容问题）</div><div class="line">&lt;a href="mailto:863139978@qq.com?cc=zhangqian0406@yeah.net&amp;bcc=384900096@qq.com"&gt;点击我发邮件&lt;/a&gt;</div><div class="line">//4.包含多个收件人、抄送、密件抄送人，用分号(;)隔开多个邮件人的地址</div><div class="line">&lt;a href="mailto:863139978@qq.com;384900096@qq.com"&gt;点击我发邮件&lt;/a&gt;</div><div class="line">//5.包含主题，用?subject=</div><div class="line">&lt;a href="mailto:863139978@qq.com?subject=邮件主题"&gt;点击我发邮件&lt;/a&gt;</div><div class="line">//6.包含内容，用?body=;如内容包含文本，使用%0A给文本换行 </div><div class="line">&lt;a href="mailto:863139978@qq.com?body=邮件主题内容%0A腾讯诚信%0A期待您的到来"&gt;点击我发邮件&lt;/a&gt;</div><div class="line">//7.内容包含链接，含http(s)://等的文本自动转化为链接</div><div class="line">&lt;a href="mailto:863139978@qq.com?body=http://www.baidu.com"&gt;点击我发邮件&lt;/a&gt;</div><div class="line">//8.内容包含图片（PC不支持）</div><div class="line">&lt;a href="mailto:863139978@qq.com?body=&lt;img src='images/1.jpg' /&gt;"&gt;点击我发邮件&lt;/a&gt;</div><div class="line">//9.完整示例</div><div class="line">&lt;a href="mailto:863139978@qq.com;384900096@qq.com?cc=zhangqian0406@yeah.net&amp;bcc=993233461@qq.com&amp;subject=[邮件主题]&amp;body=腾讯诚邀您参与%0A%0Ahttp://www.baidu.com%0A%0A&lt;img src='images/1.jpg' /&gt;"&gt;点击我发邮件&lt;/a&gt;</div></pre></td></tr></table></figure>
<ul>
<li>移动端touch事件（区分webkit和winphone）</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/* 当用户手指放在移动设备在屏幕上滑动会触发的touch事件 */</span></div><div class="line"><span class="comment">// 以下支持webkit</span></div><div class="line">touchstart——当手指触碰屏幕时候发生。不管当前有多少只手指</div><div class="line">touchmove——当手指在屏幕上滑动时连续触发。通常我们再滑屏页面，会调用event的preventDefault()可以阻止默认情况的发生：阻止页面滚动</div><div class="line">touchend——当手指离开屏幕时触发</div><div class="line">touchcancel——系统停止跟踪触摸时候会触发。例如在触摸过程中突然页面alert()一个提示框，此时会触发该事件，这个事件比较少用</div><div class="line"> </div><div class="line"><span class="comment">//TouchEvent说明：</span></div><div class="line">touches：屏幕上所有手指的信息</div><div class="line">targetTouches：手指在目标区域的手指信息</div><div class="line">changedTouches：最近一次触发该事件的手指信息</div><div class="line">touchend时，touches与targetTouches信息会被删除，changedTouches保存的最后一次的信息，最好用于计算手指信息</div><div class="line"> </div><div class="line"><span class="comment">//参数信息(changedTouches[0])</span></div><div class="line">clientX、clientY在显示区的坐标</div><div class="line">target：当前元素</div><div class="line"> </div><div class="line"><span class="comment">//事件响应顺序</span></div><div class="line">ontouchstart  &gt; ontouchmove  &gt; ontouchend &gt; onclick</div><div class="line"> </div><div class="line"><span class="comment">// 以下支持winphone 8</span></div><div class="line">MSPointerDown——当手指触碰屏幕时候发生。不管当前有多少只手指</div><div class="line">MSPointerMove——当手指在屏幕上滑动时连续触发。通常我们再滑屏页面，会调用css的html&#123;-ms-touch-action: none;&#125;可以阻止默认情况的发生：阻止页面滚动</div><div class="line">MSPointerUp——当手指离开屏幕时触发</div></pre></td></tr></table></figure>
<ul>
<li>移动端click屏幕产生200-300ms的延时响应</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">说明：移动设备上的web网页是有<span class="number">300</span>ms延迟的，玩玩会造成按钮点击延迟甚至是点击失效。</div><div class="line"> </div><div class="line">以下是历史原因，来源一个公司内一个同事的分享：</div><div class="line"><span class="number">2007</span>年苹果发布首款iphone上IOS系统搭载的safari为了将适用于PC端上大屏幕的网页能比较好的展示在手机端上，使用了双击缩放(double tap to zoom)的方案，比如你在手机上用浏览器打开一个PC上的网页，你可能在看到页面内容虽然可以撑满整个屏幕，但是字体、图片都很小看不清，此时可以快速双击屏幕上的某一部分，你就能看清该部分放大后的内容，再次双击后能回到原始状态。</div><div class="line"> </div><div class="line">双击缩放是指用手指在屏幕上快速点击两次，iOS 自带的 Safari 浏览器会将网页缩放至原始比例。</div><div class="line"> </div><div class="line">原因就出在浏览器需要如何判断快速点击上，当用户在屏幕上单击某一个元素时候，例如跳转链接&lt;a href=<span class="string">"#"</span>&gt;&lt;/a&gt;，此处浏览器会先捕获该次单击，但浏览器不能决定用户是单纯要点击链接还是要双击该部分区域进行缩放操作，所以，捕获第一次单击后，浏览器会先Hold一段时间t，如果在t时间区间里用户未进行下一次点击，则浏览器会做单击跳转链接的处理，如果t时间里用户进行了第二次单击操作，则浏览器会禁止跳转，转而进行对该部分区域页面的缩放操作。那么这个时间区间t有多少呢？在IOS safari下，大概为<span class="number">300</span>毫秒。这就是延迟的由来。造成的后果用户纯粹单击页面，页面需要过一段时间才响应，给用户慢体验感觉，对于web开发者来说是，页面js捕获click事件的回调函数处理，需要<span class="number">300</span>ms后才生效，也就间接导致影响其他业务逻辑的处理。</div><div class="line"> </div><div class="line"><span class="comment">//解决方案：</span></div><div class="line">fastclick可以解决在手机上点击事件的<span class="number">300</span>ms延迟</div><div class="line">zepto的touch模块，tap事件也是为了解决在click的延迟问题</div></pre></td></tr></table></figure>
<ul>
<li>Rentina显示屏原理及设计方案</li>
</ul>
<p>说明：retina屏是一种具备超高像素密度的液晶屏，同样大小的屏幕上显示的像素点由1个变为多个，如在同样带下的屏幕上，苹果设备的retina显示屏中，像素点1个变为4个。<br>在高清显示屏中的位图被放大，图片会变得模糊，因此移动端的视觉稿通常会设计为传统PC的2倍。<br>那么，前端的应对方案是：设计稿切出来的图片长宽保证为偶数，并使用backgroud-size把图片缩小为原来的1/2</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//例如图片宽高为：200px*200px，那么写法如下</span></div><div class="line">.css&#123;<span class="attr">width</span>:<span class="number">100</span>px;height:<span class="number">100</span>px;background-size:<span class="number">100</span>px <span class="number">100</span>px;&#125;</div><div class="line"><span class="comment">//其它元素的取值为原来的1/2，例如视觉稿40px的字体，使用样式的写法为20px</span></div><div class="line">.css&#123;font-size:<span class="number">20</span>px&#125;</div><div class="line"> </div><div class="line"><span class="comment">//image-set设计Rentina背景图</span></div><div class="line">image-set,webkit私有属性，也是CSS4的属性，为解决Rentina屏幕下的图像而生。</div><div class="line">.css &#123;</div><div class="line">    <span class="attr">background</span>: url(images/bg.jpg) no-repeat center;</div><div class="line">    background: -webkit-image-set(</div><div class="line">    url(images/bg.jpg) <span class="number">1</span>x,     <span class="comment">//支持image-set普通屏</span></div><div class="line">    url(images/bg<span class="number">-2</span>x.jpg) <span class="number">2</span>x); <span class="comment">//支持image-set的Rentinan</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>点击元素产生背景或边框怎么去掉</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">/ios用户点击一个链接，会出现一个半透明灰色遮罩, 如果想要禁用，可设置-webkit-tap-highlight-color的alpha值为<span class="number">0</span>去除灰色半透明遮罩；</div><div class="line"><span class="comment">//android用户点击一个链接，会出现一个边框或者半透明灰色遮罩, 不同生产商定义出来额效果不一样，可设置-webkit-tap-highlight-color的alpha值为0去除部分机器自带的效果；</span></div><div class="line"><span class="comment">//winphone系统,点击标签产生的灰色半透明背景，能通过设置&lt;meta name="msapplication-tap-highlight" content="no"&gt;去掉；</span></div><div class="line"><span class="comment">//特殊说明：有些机型去除不了，如小米2。对于按钮类还有个办法，不使用a或者input标签，直接用div标签</span></div><div class="line">a,button,input,textarea &#123; </div><div class="line">    -webkit-tap-highlight-color: rgba(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>); </div><div class="line">    -webkit-user-modify:read-write-plaintext-only; <span class="comment">//-webkit-user-modify有个副作用，就是输入法不再能够输入多个字符</span></div><div class="line">&#125;   </div><div class="line"><span class="comment">// 也可以 </span></div><div class="line">* &#123; -webkit-tap-highlight-color: rgba(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>); &#125;</div><div class="line"><span class="comment">//winphone下</span></div><div class="line">&lt;meta name=<span class="string">"msapplication-tap-highlight"</span> content=<span class="string">"no"</span>&gt;</div></pre></td></tr></table></figure>
<ul>
<li>美化表单元素</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//一、使用appearance改变webkit浏览器的默认外观</span></div><div class="line">input,select &#123; -webkit-appearance:none; appearance: none; &#125;</div><div class="line"> </div><div class="line"><span class="comment">//二、winphone下，使用伪元素改变表单元素默认外观</span></div><div class="line"><span class="comment">//1.禁用select默认箭头，::-ms-expand修改表单控件下拉箭头，设置隐藏并使用背景图片来修饰</span></div><div class="line">select::-ms-expand &#123; <span class="attr">display</span>:none; &#125;</div><div class="line"> </div><div class="line"><span class="comment">//2.禁用radio和checkbox默认样式，::-ms-check修改表单复选框或单选框默认图标，设置隐藏并使用背景图片来修饰</span></div><div class="line">input[type=radio]::-ms-check,</div><div class="line">input[type=checkbox]::-ms-check &#123; <span class="attr">display</span>:none; &#125;</div><div class="line"> </div><div class="line"><span class="comment">//3.禁用pc端表单输入框默认清除按钮，::-ms-clear修改清除按钮，设置隐藏并使用背景图片来修饰</span></div><div class="line">input[type=text]::-ms-clear,</div><div class="line">input[type=tel]::-ms-clear,</div><div class="line">input[type=number]::-ms-clear &#123; <span class="attr">display</span>:none; &#125;</div></pre></td></tr></table></figure>
<ul>
<li>移动端字体单位font-size选择px还是rem</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 如需适配多种移动设备，建议使用rem。以下为参考值：</span></div><div class="line">html &#123; font-size: <span class="number">62.5</span>%; &#125;   <span class="comment">//10*16 = 62.5%</span></div><div class="line"><span class="comment">//设置12px字体   这里注意在rem前要加上对应的px值，解决不支持rem的浏览器的兼容问题，做到优雅降级</span></div><div class="line">body &#123; font-size:<span class="number">12</span>px; font-size:<span class="number">1.2</span>rem; &#125;</div></pre></td></tr></table></figure>
<ul>
<li>超实用的CSS样式</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">//去掉webkit的滚动条——display: none;</div><div class="line">//其他参数</div><div class="line">::-webkit-scrollba //滚动条整体部分</div><div class="line">::-webkit-scrollbar-thumb   //滚动条内的小方块</div><div class="line">::-webkit-scrollbar-track   //滚动条轨道</div><div class="line">::-webkit-scrollbar-button  //滚动条轨道两端按钮</div><div class="line">::-webkit-scrollbar-track-piece  //滚动条中间部分，内置轨道</div><div class="line">::-webkit-scrollbar-corner       //边角，两个滚动条交汇处</div><div class="line">::-webkit-resizer            //两个滚动条的交汇处上用于通过拖动调整元素大小的小控件</div><div class="line"> </div><div class="line">// 禁止长按链接与图片弹出菜单</div><div class="line">a,img &#123; -webkit-touch-callout: none &#125;    </div><div class="line"> </div><div class="line">// 禁止ios和android用户选中文字</div><div class="line">html,body &#123;-webkit-user-select:none; user-select: none; &#125;</div><div class="line"> </div><div class="line">// 改变输入框placeholder的颜色值</div><div class="line">::-webkit-input-placeholder &#123; /* WebKit browsers */</div><div class="line">color: #999; &#125;</div><div class="line">:-moz-placeholder &#123; /* Mozilla Firefox 4 to 18 */</div><div class="line">color: #999; &#125;</div><div class="line">::-moz-placeholder &#123; /* Mozilla Firefox 19+ */</div><div class="line">color: #999; &#125;</div><div class="line">:-ms-input-placeholder &#123; /* Internet Explorer 10+ */</div><div class="line">color: #999; &#125;</div><div class="line">input:focus::-webkit-input-placeholder&#123; color:#999; &#125;</div><div class="line"> </div><div class="line">// android上去掉语音输入按钮</div><div class="line">input::-webkit-input-speech-button &#123;display: none&#125;</div><div class="line"> </div><div class="line">// 阻止windows Phone的默认触摸事件</div><div class="line">/*说明：winphone下默认触摸事件事件使用e.preventDefault是无效的，可通过样式来禁用，如：*/</div><div class="line">html &#123; -ms-touch-action:none; &#125; //禁止winphone默认触摸事件</div></pre></td></tr></table></figure>
<ul>
<li>取消input在ios下，输入的时候英文首字母的默认大写</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;input autocapitalize=<span class="string">"off"</span> autocorrect=<span class="string">"off"</span> /&gt;</div></pre></td></tr></table></figure>
<ul>
<li>手机拍照和上传图片</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//IOS有拍照、录像、选取本地图片功能，部分Android只有选择本地图片功能。Winphone不支持</span></div><div class="line">&lt;input type=<span class="string">"file"</span> accept=<span class="string">"images/*"</span> /&gt;</div><div class="line">&lt;input type="file" accept="video/*" /&gt;</div></pre></td></tr></table></figure>
<ul>
<li>屏幕旋转的事件和样式</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//JS处理</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">orientInit</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> orientChk = <span class="built_in">document</span>.documentElement.clientWidth &gt; <span class="built_in">document</span>.documentElement.clientHeight?<span class="string">'landscape'</span>:<span class="string">'portrait'</span>;</div><div class="line">    <span class="keyword">if</span>(orientChk ==<span class="string">'lapdscape'</span>)&#123;</div><div class="line">        <span class="comment">//这里是横屏下需要执行的事件</span></div><div class="line">    &#125;<span class="keyword">else</span>&#123;</div><div class="line">        <span class="comment">//这里是竖屏下需要执行的事件</span></div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"> </div><div class="line">orientInit();</div><div class="line"><span class="built_in">window</span>.addEventListener(<span class="string">'onorientationchange'</span> <span class="keyword">in</span> <span class="built_in">window</span>?<span class="string">'orientationchange'</span>:<span class="string">'resize'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    setTimeout(orientInit, <span class="number">100</span>);</div><div class="line">&#125;,<span class="literal">false</span>)    </div><div class="line"> </div><div class="line"><span class="comment">//CSS处理</span></div><div class="line"><span class="comment">//竖屏时样式</span></div><div class="line">@media all and (orientation:portrait)&#123;   &#125;</div><div class="line"><span class="comment">//横屏时样式</span></div><div class="line">@media all and (orientation:landscape)&#123;   &#125;</div></pre></td></tr></table></figure>
<ul>
<li>audio元素和video元素在ios和andriod中无法自动播放</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">//音频，写法一</div><div class="line">&lt;audio src="music/bg.mp3" autoplay loop controls&gt;你的浏览器还不支持哦&lt;/audio&gt;</div><div class="line"> </div><div class="line">//音频，写法二</div><div class="line">&lt;audio controls="controls"&gt; </div><div class="line">    &lt;source src="music/bg.ogg" type="audio/ogg"&gt;&lt;/source&gt;</div><div class="line">    &lt;source src="music/bg.mp3" type="audio/mpeg"&gt;&lt;/source&gt;</div><div class="line">    优先播放音乐bg.ogg，不支持在播放bg.mp3</div><div class="line">&lt;/audio&gt;</div><div class="line"> </div><div class="line">//JS绑定自动播放（操作window时，播放音乐）</div><div class="line">$(window).one('touchstart', function()&#123;</div><div class="line">    music.play();</div><div class="line">&#125;)</div><div class="line"> </div><div class="line">//微信下兼容处理</div><div class="line">document.addEventListener("WeixinJSBridgeReady", function () &#123;</div><div class="line">    music.play();</div><div class="line">&#125;, false);</div><div class="line"> </div><div class="line">//小结</div><div class="line">//1.audio元素的autoplay属性在IOS及Android上无法使用，在PC端正常</div><div class="line">//2.audio元素没有设置controls时，在IOS及Android会占据空间大小，而在PC端Chrome是不会占据任何空间</div></pre></td></tr></table></figure>
<ul>
<li>重力感应事件</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 运用HTML5的deviceMotion，调用重力感应事件</span></div><div class="line"><span class="keyword">if</span>(<span class="built_in">window</span>.DeviceMotionEvent)&#123;</div><div class="line">    <span class="built_in">document</span>.addEventListener(<span class="string">'devicemotion'</span>, deviceMotionHandler, <span class="literal">false</span>)</div><div class="line">&#125;   </div><div class="line"> </div><div class="line"><span class="keyword">var</span> speed = <span class="number">30</span>;</div><div class="line"><span class="keyword">var</span> x = y = z = lastX = lastY = lastZ = <span class="number">0</span>;</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">deviceMotionHandler</span>(<span class="params">eventData</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> acceleration = event.accelerationIncludingGravity;</div><div class="line">    x = acceleration.x;</div><div class="line">    y = acceleration.y; </div><div class="line">    z = acceleration.z;</div><div class="line">    <span class="keyword">if</span>(<span class="built_in">Math</span>.abs(x-lastX)&gt;speed || <span class="built_in">Math</span>.abs(y-lastY)&gt;speed || <span class="built_in">Math</span>.abs(z-lastZ)&gt;speed )&#123;</div><div class="line">        <span class="comment">//这里是摇动后要执行的方法 </span></div><div class="line">        yaoAfter();</div><div class="line">    &#125;</div><div class="line">    lastX = x;</div><div class="line">    lastY = y;</div><div class="line">    lastZ = z;</div><div class="line">&#125;</div><div class="line"> </div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">yaoAfter</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="comment">//do something</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>微信浏览器用户调整字体大小后页面矬了，怎么阻止用户调整</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//以下代码可使Android机页面不再受用户字体缩放强制改变大小，但是会有1S左右延时，期间可以考虑loading来处理</span></div><div class="line"><span class="keyword">if</span> (<span class="keyword">typeof</span>(WeixinJSBridge) == <span class="string">"undefined"</span>) &#123;</div><div class="line">    <span class="built_in">document</span>.addEventListener(<span class="string">"WeixinJSBridgeReady"</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</div><div class="line">        setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">            WeixinJSBridge.invoke(<span class="string">'setFontSizeCallback'</span>, &#123; <span class="string">'fontSize'</span>:<span class="number">0</span>&#125;, <span class="function"><span class="keyword">function</span>(<span class="params">res</span>)</span>&#123;</div><div class="line">                alert(<span class="built_in">JSON</span>.stringify(res));</div><div class="line">            &#125;)</div><div class="line">        &#125;, <span class="number">0</span>)</div><div class="line">    &#125;);</div><div class="line">&#125;<span class="keyword">else</span>&#123;  </div><div class="line">    setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        WeixinJSBridge.invoke(<span class="string">'setFontSizeCallback'</span>, &#123; <span class="string">'fontSize'</span>:<span class="number">0</span>&#125;, <span class="function"><span class="keyword">function</span>(<span class="params">res</span>)</span>&#123;</div><div class="line">            alert(<span class="built_in">JSON</span>.stringify(res));</div><div class="line">        &#125;)</div><div class="line">    &#125;, <span class="number">0</span>)   </div><div class="line">&#125;</div><div class="line"> </div><div class="line"><span class="comment">//IOS下可使用 -webkit-text-size-adjust禁止用户调整字体大小</span></div><div class="line">body &#123; -webkit-text-size-adjust:<span class="number">100</span>%!important; &#125;</div><div class="line"> </div><div class="line"><span class="comment">//最好的解决方案：最好使用rem或百分比布局</span></div></pre></td></tr></table></figure>
<ul>
<li>定位的坑</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line">//fixed定位</div><div class="line">//1.ios下fixed元素容易定位出错，软键盘弹出时，影响fixed元素定位</div><div class="line">//2.android下fixed表现要比iOS更好，软键盘弹出时，不会影响fixed元素定位</div><div class="line">//3.ios4下不支持position:fixed</div><div class="line">//解决方案：使用[Iscroll](http://cubiq.org/iscroll-5)，如：</div><div class="line">&lt;div id="wrapper"&gt;</div><div class="line">        &lt;ul&gt;</div><div class="line">               &lt;li&gt;&lt;/li&gt;</div><div class="line">               .....</div><div class="line">        &lt;/ul&gt;</div><div class="line">&lt;/div&gt;</div><div class="line">&lt;script src="iscroll.js"&gt;&lt;/script&gt;</div><div class="line">&lt;script&gt;</div><div class="line">    var myscroll;</div><div class="line">    function loaded()&#123;</div><div class="line">        myscroll=new iScroll("wrapper");</div><div class="line">    &#125;</div><div class="line">    window.addEventListener("DOMContentLoaded",loaded,false);</div><div class="line">&lt;/script&gt;</div><div class="line"> </div><div class="line"> </div><div class="line">//position定位</div><div class="line">//Android下弹出软键盘弹出时，影响absolute元素定位</div><div class="line">//解决方案:</div><div class="line">var ua = navigator.userAgent.indexOf('Android');</div><div class="line">if(ua&gt;-1)&#123;</div><div class="line">    $('.ipt').on('focus', function()&#123;</div><div class="line">        $('.css').css(&#123;'visibility':'hidden'&#125;)</div><div class="line">    &#125;).on('blur', function()&#123;</div><div class="line">        $('.css').css(&#123;'visibility':'visible'&#125;)</div><div class="line">    &#125;)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>播放视频不全屏</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&lt;!--</div><div class="line"><span class="number">1.</span>ios7+支持自动播放</div><div class="line"><span class="number">2.</span>支持Airplay的设备（如：音箱、Apple TV)播放</div><div class="line">x-webkit-airplay=<span class="string">"true"</span> </div><div class="line"><span class="number">3.</span>播放视频不全屏</div><div class="line">webkit-playsinline=<span class="string">"true"</span> </div><div class="line">--&gt;</div><div class="line">&lt;video x-webkit-airplay="true" webkit-playsinline="true" preload="auto" autoplay src="http://"&gt;&lt;/video&gt;</div></pre></td></tr></table></figure>
<ul>
<li>JS判断设备</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">deviceType</span>(<span class="params"></span>)</span>&#123;</div><div class="line">  <span class="keyword">var</span> ua = navigator.userAgent;</div><div class="line">  <span class="keyword">var</span> agent = [<span class="string">"Android"</span>, <span class="string">"iPhone"</span>, <span class="string">"SymbianOS"</span>, <span class="string">"Windows Phone"</span>, <span class="string">"iPad"</span>, <span class="string">"iPod"</span>];    </div><div class="line">  <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;len,len = agent.length; i++)&#123;</div><div class="line">      <span class="keyword">if</span>(ua.indexOf(agent[i])&gt;<span class="number">0</span>)&#123;         </div><div class="line">          <span class="keyword">break</span>;</div><div class="line">      &#125;</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line">deviceType();</div><div class="line"><span class="built_in">window</span>.addEventListener(<span class="string">'resize'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    deviceType();</div><div class="line">&#125;)</div></pre></td></tr></table></figure>
<ul>
<li>JS判断微信浏览器</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">isWeixin</span>(<span class="params"></span>)</span>&#123;</div><div class="line">  <span class="keyword">var</span> ua = navigator.userAgent.toLowerCase();</div><div class="line">  <span class="keyword">if</span>(ua.match(<span class="regexp">/MicroMessenger/i</span>)==<span class="string">'micromessenger'</span>)&#123;</div><div class="line">      <span class="keyword">return</span> <span class="literal">true</span>;</div><div class="line">  &#125;<span class="keyword">else</span>&#123;</div><div class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>android 2.3 bug</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//1.@-webkit-keyframes 需要以0%开始100%结束，0%的百分号不能去掉</span></div><div class="line"><span class="comment">//2.after和before伪类无法使用动画animation</span></div><div class="line"><span class="comment">//3.border-radius不支持%单位，如要兼容，可以给radius设置一下较大的值</span></div><div class="line"><span class="comment">//4.translate百分比的写法和scale在一起会导致失效，例如：</span></div><div class="line">-webkit-transform: translate(<span class="number">-50</span>%,<span class="number">-50</span>%) scale(<span class="number">-0.5</span>, <span class="number">1</span>)</div></pre></td></tr></table></figure>
<ul>
<li>android 4.x bug</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//1.三星 Galaxy S4中自带浏览器不支持border-radius缩写</span></div><div class="line"><span class="comment">//2.同时设置border-radius和背景色的时候，背景色会溢出到圆角以外部分</span></div><div class="line"><span class="comment">//3.部分手机(如三星)，a链接支持鼠标:visited事件，也就是说链接访问后文字变为紫色</span></div><div class="line"><span class="comment">//4.android无法同时播放多音频audio</span></div></pre></td></tr></table></figure>
<ul>
<li>消除transition闪屏</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">.css &#123;</div><div class="line">  -webkit-transform-style: preserve<span class="number">-3</span>d;</div><div class="line">  -webkit-backface-visibility: hidden;</div><div class="line">  -webkit-perspective: <span class="number">1000</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>开启硬件加速</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//目前，像Chrome/Filefox/Safari/IE9+以及最新版本Opera都支持硬件加速，当检测到某个DOM元素应用了某些CSS规则时就会自动开启，从而解决页面闪白，保证动画流畅。</span></div><div class="line">.css &#123;</div><div class="line">    -webkit-transform: translate3d(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);</div><div class="line">    -moz-transform: translate3d(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);</div><div class="line">    -ms-transform: translate3d(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);</div><div class="line">    transform: translate3d(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>渲染优化</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//1.禁止使用iframe（阻塞父文档onload事件）</span></div><div class="line"><span class="comment">//2.禁止使用gif图片实现loading效果（降低CPU消耗，提升渲染性能）</span></div><div class="line"><span class="comment">//使用CSS3代码代替JS动画；</span></div><div class="line"><span class="comment">//开启GPU加速；</span></div><div class="line"><span class="comment">//使用base64位编码图片(不小图而言，大图不建议使用)</span></div><div class="line"><span class="comment">// 对于一些小图标，可以使用base64位编码，以减少网络请求。但不建议大图使用，比较耗费CPU。小图标优势在于：</span></div><div class="line"><span class="comment">//1.减少HTTP请求；</span></div><div class="line"><span class="comment">//2.避免文件跨域；</span></div><div class="line"><span class="comment">//3.修改及时生效；</span></div></pre></td></tr></table></figure>
<p>转载：<a href="http://mp.weixin.qq.com/s/JVUpsz9QHsNV0_7U-3HCMg" target="_blank" rel="external">http://mp.weixin.qq.com/s/JVUpsz9QHsNV0_7U-3HCMg</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;H5项目常见问题及注意事项&quot;&gt;&lt;a href=&quot;#H5项目常见问题及注意事项&quot; class=&quot;headerlink&quot; title=&quot;H5项目常见问题及注意事项&quot;&gt;&lt;/a&gt;H5项目常见问题及注意事项&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Meta基础知识：&lt;/p&gt;
    
    </summary>
    
    
      <category term="H5" scheme="http://caoweiqiang.com/tags/H5/"/>
    
      <category term="H5常见问题汇总" scheme="http://caoweiqiang.com/tags/H5%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/"/>
    
      <category term="H5解决方案" scheme="http://caoweiqiang.com/tags/H5%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    
  </entry>
  
  <entry>
    <title>JS 利用appendChild对&lt;li&gt;标签进行排序</title>
    <link href="http://caoweiqiang.com/label-sort/"/>
    <id>http://caoweiqiang.com/label-sort/</id>
    <published>2017-06-08T01:50:06.119Z</published>
    <updated>2017-06-08T01:55:08.193Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://img.blog.csdn.net/20160318162817435" alt="img"><br>按照从大到小排序</p>
<p>appendChild: </p>
<p>假设父级a中已经有子节点b，那么a.appendChild(b)的作用是：1.先将子节点b从父级a中删除；2.再将子节点b添加到a中，放在最末尾。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">&lt;body&gt;</div><div class="line">  &lt;button id="bt1"&gt;提交&lt;/button&gt;</div><div class="line">  &lt;ul id="ul1"&gt; </div><div class="line">      &lt;li&gt;32&lt;/li&gt;</div><div class="line">      &lt;li&gt;243&lt;/li&gt;</div><div class="line">      &lt;li&gt;43&lt;/li&gt;</div><div class="line">      &lt;li&gt;24&lt;/li&gt;</div><div class="line">      &lt;li id="t"&gt;2&lt;/li&gt;</div><div class="line">      &lt;li&gt;84&lt;/li&gt;</div><div class="line">      &lt;li&gt;84&lt;/li&gt;</div><div class="line">      &lt;li&gt;25&lt;/li&gt;</div><div class="line">  &lt;/ul&gt;</div><div class="line">&lt;/body&gt;</div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">&lt;script&gt;</div><div class="line">  <span class="built_in">window</span>.onload=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">   <span class="keyword">var</span> oUl1=<span class="built_in">document</span>.getElementById(<span class="string">'ul1'</span>);</div><div class="line">   <span class="keyword">var</span> oBt=<span class="built_in">document</span>.getElementById(<span class="string">'bt1'</span>);</div><div class="line"></div><div class="line">   oBt.onclick=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> oLi=<span class="built_in">document</span>.getElementsByTagName(<span class="string">'li'</span>);</div><div class="line"></div><div class="line">    <span class="keyword">var</span> arr=[];</div><div class="line">    <span class="comment">//将&lt;li&gt;标签放入空的arr数组中</span></div><div class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;oLi.length;i++)&#123;</div><div class="line">        arr[i]=oLi[i]; </div><div class="line">    &#125;</div><div class="line">    <span class="comment">//sort排序，数组中每个元素都是一个&lt;li&gt;,所以要用innerHTML</span></div><div class="line">    arr.sort(<span class="function"><span class="keyword">function</span>(<span class="params">li1,li2</span>)</span>&#123;</div><div class="line">        <span class="keyword">var</span> n1=<span class="built_in">parseInt</span>(li1.innerHTML);</div><div class="line">        <span class="keyword">var</span> n2=<span class="built_in">parseInt</span>(li2.innerHTML);   </div><div class="line">        <span class="keyword">return</span> n1-n2;  </div><div class="line">    &#125;)</div><div class="line">    <span class="comment">//通过appendChild进行排序</span></div><div class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;arr.length;i++)&#123;</div><div class="line">        oUl1.appendChild(arr[i]);</div><div class="line">    &#125;   </div><div class="line">   &#125;</div><div class="line">  &#125;</div><div class="line">  &lt;<span class="regexp">/script&gt;</span></div></pre></td></tr></table></figure>
<p><img src="http://img.blog.csdn.net/20160318164135961" alt="img"></p>
<p>转载：<a href="http://blog.csdn.net/u010114513/article/details/50924869" target="_blank" rel="external">http://blog.csdn.net/u010114513/article/details/50924869</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://img.blog.csdn.net/20160318162817435&quot; alt=&quot;img&quot;&gt;&lt;br&gt;按照从大到小排序&lt;/p&gt;
&lt;p&gt;appendChild: &lt;/p&gt;
&lt;p&gt;假设父级a中已经有子节点b，那么a.appendChild(b)
    
    </summary>
    
    
      <category term="JS" scheme="http://caoweiqiang.com/tags/JS/"/>
    
      <category term="排序" scheme="http://caoweiqiang.com/tags/%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>详解百度地图API之地图标注</title>
    <link href="http://caoweiqiang.com/baidu-api/"/>
    <id>http://caoweiqiang.com/baidu-api/</id>
    <published>2017-06-07T07:02:52.315Z</published>
    <updated>2017-06-07T09:51:47.144Z</updated>
    
    <content type="html"><![CDATA[<h4 id="一、标注概述"><a href="#一、标注概述" class="headerlink" title="一、标注概述"></a>一、标注概述</h4><p>标注（Marker）是用来表示一个点位置的可见元素，每个标注自身都包含地理信息。比如你在西单商场位置添加了一个标注，不论地图移动、缩放，标注都会跟随一起移动，保证其始终指向正确的地理位置。</p>
<p><img src="http://images.51cto.com/files/uploadimg/20110916/1040051.jpg" alt="img"><br>从上面的图可以看出，不论地图如何变化标注始终指向“西单商场”的位置。 </p>
<h4 id="二、如何知道某个点的坐标？"><a href="#二、如何知道某个点的坐标？" class="headerlink" title="二、如何知道某个点的坐标？"></a>二、如何知道某个点的坐标？</h4><p>上例中我们在西单商场位置添加了一个标注，那么我是如何知道它的坐标点呢？可以通过API的事件机制来获取：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">map.addEventListener(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;  </div><div class="line"><span class="built_in">console</span>.log(e.point);  </div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>我们在map对象上添加了一个click事件的监听函数，当点击地图上某个位置时，监听函数通过控制台把当前点击的位置输出出来（注意需要有控制台的支持，比如firebug，如果没有控制台则可使用alert把point的lng和lat属性输出出来）。此外，你也可以使用API提供的坐标拾取工具来完成<a href="http://dev.baidu.com/wiki/static/map/API/tool/getPoint/" target="_blank" rel="external">http://dev.baidu.com/wiki/static/map/API/tool/getPoint/</a>，它支持检索并且点击地图上任意位置时会出现该位置的坐标。</p>
<h4 id="三、标注元素组成"><a href="#三、标注元素组成" class="headerlink" title="三、标注元素组成"></a>三、标注元素组成</h4><p>从DOM元素构成角度看，一个完整的标注是由以下几个部分组成的：</p>
<p>标注点击区域</p>
<p>标注图标</p>
<p>标注阴影</p>
<p>下面是示意图：</p>
<p><img src="http://images.51cto.com/files/uploadimg/20110916/1040052.jpg" alt="img"></p>
<p>在地图API实现中，这三个DOM元素分别位于不同的容器中，这些容器可以通过map.getPanes()方法获得，其中markerMouseTarget就是标注点击区域所在容器、markerPane为标注图标所在容器，markerShadow为标注阴影所在图层。你可能会在自定义覆盖物时需要这些容器对象，这里只需要知道Marker的各个部分是如何放置的即可。</p>
<h4 id="四、自定义标注图标"><a href="#四、自定义标注图标" class="headerlink" title="四、自定义标注图标"></a>四、自定义标注图标</h4><p>标注的图标是可以自定义的，通过Icon类可以自定义标注的图标，比如我希望使用下面这个图片作为标注图标：</p>
<p><img src="http://images.51cto.com/files/uploadimg/20110916/1040053.png" alt="img"></p>
<p>已知这个图标大小为20x32。我们初始化地图，接着定义Icon，并赋给一个Marker实例：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">varmap =newBMap.Map(<span class="string">'container'</span>);  </div><div class="line">map.centerAndZoom(newBMap.Point(<span class="number">116.380797</span>, <span class="number">39.918497</span>), <span class="number">18</span>);  </div><div class="line"><span class="keyword">var</span> icon = <span class="keyword">new</span> BMap.Icon(<span class="string">'pin.png'</span>, <span class="keyword">new</span> BMap.Size(<span class="number">20</span>, <span class="number">32</span>), &#123;  </div><div class="line"><span class="attr">anchor</span>: <span class="keyword">new</span> BMap.Size(<span class="number">10</span>, <span class="number">30</span>)  </div><div class="line">&#125;);varmkr =newBMap.Marker(newBMap.Point(<span class="number">116.38075</span>,<span class="number">39.918986</span>), &#123;  </div><div class="line"><span class="attr">icon</span>: icon  </div><div class="line">&#125;);  </div><div class="line">map.addOverlay(mkr);</div></pre></td></tr></table></figure>
<p>我们给定icon所需图片的url，接着是图片的尺寸，另外我们还增加了anchor属性，这个是干什么用的呢？在自定义标注图标时有一点需要注意的就是标注的定位点（anchor），通俗的讲就是要指定图片的哪个位置是与标注真正的位置对应在一起。我们通过下面的图示来说明：</p>
<p><img src="http://images.51cto.com/files/uploadimg/20110916/1040054.png" alt="img"></p>
<p>我们获取到地图上一个位置（上图中标注下端所在的黑色小方块），那么我也希望我标注中间下端指向这个位置，这个就需要通过anchor来调节。anchor的意义如下图所示：</p>
<p><img src="http://images.51cto.com/files/uploadimg/20110916/1040055.png" alt="img"><br>即定位点距离图片左上角的偏移量。</p>
<p>如果不给anchor的话，API会自动获取图片中心点作为anchor位置：</p>
<p><img src="http://images.51cto.com/files/uploadimg/20110916/1040056.png" alt="img"><br>我们看到标注图片中心的位置覆盖在那个小方块区域。</p>
<p>除了anchor之外，还有一个infoWindowAnchor属性，它是用来控制信息窗口开启的位置的（注意这里调用的是Marker的openInfoWindow方法，而不是Map的openInfoWindow方法），默认情况下它和icon的anchor是一个位置：</p>
<p><img src="http://images.51cto.com/files/uploadimg/20110916/1040057.png" alt="img"></p>
<p>标注被InfoWindow的底角挡住了，通过infoWindowAnchor属性就可以改变开启位置：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">varicon =newBMap.Icon(<span class="string">'pin.png'</span>, newBMap.Size(<span class="number">20</span>, <span class="number">32</span>), &#123;  </div><div class="line"><span class="attr">anchor</span>: newBMap.Size(<span class="number">10</span>, <span class="number">30</span>),  </div><div class="line"><span class="attr">infoWindowAnchor</span>: newBMap.Size(<span class="number">10</span>, <span class="number">0</span>)  </div><div class="line">&#125;)</div></pre></td></tr></table></figure>
<p>再看看效果：</p>
<p><img src="http://images.51cto.com/files/uploadimg/20110916/1040058.png" alt="img"><br>尖角位置已经发生了改变。</p>
<h4 id="五、标注拖拽"><a href="#五、标注拖拽" class="headerlink" title="五、标注拖拽"></a>五、标注拖拽</h4><p>标注支持拖拽，并且可以配置是否有动画效果，我们修改创建标注的代码：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">varmkr =newBMap.Marker(newBMap.Point(<span class="number">116.38075</span>,<span class="number">39.918986</span>), &#123;  </div><div class="line"><span class="attr">icon</span>: icon,  </div><div class="line"><span class="attr">enableDragging</span>: <span class="literal">true</span>,  </div><div class="line"><span class="attr">raiseOnDrag</span>: <span class="literal">true</span>&#125;);</div></pre></td></tr></table></figure>
<p>这里开启了拖拽功能以及响应的动画效果。如果此时拖拽地图你会得到如下效果：</p>
<p><img src="http://images.51cto.com/files/uploadimg/20110916/1040059.png" alt="img"><br>通过监听标注的dragend事件，你可以知道拖拽结束后标注的地理位置：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">mkr.addEventListener(<span class="string">'dragend'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;  </div><div class="line">alert(e.point.lng +<span class="string">', '</span>+e.point.lat);  </div><div class="line">&#125;)</div></pre></td></tr></table></figure>
<h4 id="六、标注阴影"><a href="#六、标注阴影" class="headerlink" title="六、标注阴影"></a>六、标注阴影</h4><p>为了增加立体感，可以单独给标注添加阴影，当然你也可以把阴影直接画在icon所用的图片上，但是由于阴影和标注本身在一起，所以就不建议使用任何动画效果，否则会缺乏真实感。阴影可以通过MarkerOptions的shadow属性配置，类型也是一个Icon实例。具体使用方法和icon属性一样，这里就不赘述了。</p>
<p>转载：<a href="http://developer.51cto.com/art/201109/291710.htm" target="_blank" rel="external">http://developer.51cto.com/art/201109/291710.htm</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;一、标注概述&quot;&gt;&lt;a href=&quot;#一、标注概述&quot; class=&quot;headerlink&quot; title=&quot;一、标注概述&quot;&gt;&lt;/a&gt;一、标注概述&lt;/h4&gt;&lt;p&gt;标注（Marker）是用来表示一个点位置的可见元素，每个标注自身都包含地理信息。比如你在西单商场位置添加了一
    
    </summary>
    
    
      <category term="百度地图" scheme="http://caoweiqiang.com/tags/%E7%99%BE%E5%BA%A6%E5%9C%B0%E5%9B%BE/"/>
    
      <category term="百度地图API" scheme="http://caoweiqiang.com/tags/%E7%99%BE%E5%BA%A6%E5%9C%B0%E5%9B%BEAPI/"/>
    
      <category term="地图标注" scheme="http://caoweiqiang.com/tags/%E5%9C%B0%E5%9B%BE%E6%A0%87%E6%B3%A8/"/>
    
  </entry>
  
  <entry>
    <title>hexo博客安装RSS插件</title>
    <link href="http://caoweiqiang.com/hexo-rss/"/>
    <id>http://caoweiqiang.com/hexo-rss/</id>
    <published>2017-06-07T06:52:50.311Z</published>
    <updated>2017-06-07T07:01:44.949Z</updated>
    
    <content type="html"><![CDATA[<p>hexo博客不能使用RSS功能，需要按照RSS插件，才能正常使用。</p>
<p>如下配置步骤：</p>
<p>1、安装插件，进入本地hexo目录，打开GIT bash，输入一下命令。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-generator-feed</div></pre></td></tr></table></figure>
<p><img src="http://img.blog.csdn.net/20160827093755958" alt="img"></p>
<p>2、添加配置。在本地hexo根目录下_config.yml文件中添加一下配置。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"># Extensions</div><div class="line">## Plugins: http://hexo.io/plugins/</div><div class="line">#RSS订阅</div><div class="line">plugin:</div><div class="line">- hexo-generator-feed</div><div class="line">#Feed Atom</div><div class="line">feed:</div><div class="line">type: atom</div><div class="line">path: atom.xml</div><div class="line">limit: 20</div></pre></td></tr></table></figure>
<p>3、添加主题配置，在主题目录下_config.yml目录下，添加如下配置。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rss: <span class="regexp">/atom.xml</span></div></pre></td></tr></table></figure>
<p><img src="http://img.blog.csdn.net/20160827093903148" alt="img"></p>
<p>转载：<a href="http://blog.csdn.net/u011303443/article/details/52333695" target="_blank" rel="external">http://blog.csdn.net/u011303443/article/details/52333695</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;hexo博客不能使用RSS功能，需要按照RSS插件，才能正常使用。&lt;/p&gt;
&lt;p&gt;如下配置步骤：&lt;/p&gt;
&lt;p&gt;1、安装插件，进入本地hexo目录，打开GIT bash，输入一下命令。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;ta
    
    </summary>
    
    
      <category term="hexo" scheme="http://caoweiqiang.com/tags/hexo/"/>
    
      <category term="RSS插件" scheme="http://caoweiqiang.com/tags/RSS%E6%8F%92%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>2017 年用于 UI 设计的 CSS3 和 JavaScript 动画库(TOP 9)</title>
    <link href="http://caoweiqiang.com/css3-js/"/>
    <id>http://caoweiqiang.com/css3-js/</id>
    <published>2017-06-06T23:33:45.401Z</published>
    <updated>2017-06-07T01:52:50.913Z</updated>
    
    <content type="html"><![CDATA[<p>前端网页设计在过去的十年里经历了一场革命。在2007年，我们大多数人仍在设计静态杂志布局，在2017年，我们重新设计了数字机器，有成千上万的调整、协调、移动的部件。</p>
<p>简单的说，<strong>很好的UI设计师还需要成为很好的动画师</strong> – 需要对网络动画技术有一个很好的理解。</p>
<p>这是我们指南中最新更新的，帮助你为每个任务选择正确的动画库。我们将通过 9 个免费的、编码良好的动画库，最适合于UI设计，它们的优点和缺点，以及何时选择它们。</p>
<p>请记住，我们是从一个熟悉代码的UI设计师（而不是从代精通代码的开发人员）的角度来看待每个库。这些库中有一些是纯 CSS 实现的。其他是JavaScript 的，但是，除了了解基本的 HTML/CSS 之外，使用他们你不需要更多的其他知识。链接一个动画库 – 添加一个 CSS 类 即可。</p>
<p>2017 年 9 大动画库列表</p>
<blockquote>
<p>1.Animate.css<br>2.Bounce.js<br>3.AnimeJS<br>4.Magic Animations<br>5.DynCSS<br>6.CSShake<br>7.Hover.CSS<br>8.Velocity.js<br>9.AniJS</p>
</blockquote>
<h1 id="Animate-css"><a href="#Animate-css" class="headerlink" title="Animate.css"></a><a href="https://daneden.github.io/animate.css/" target="_blank" rel="external">Animate.css</a></h1><hr>
<p><a href="https://daneden.github.io/animate.css/" target="_blank" rel="external">Animate.css</a>是最简单、最易用的 CSS 动画库之一。将动画库应用到你的项目中，就像链接 CSS 并且在 HTML 元素中添加所需的 CSS 类一样简单。。如果您愿意，还可以使用 jQuery 触发特定事件的动画。</p>
<p>  <img src="http://css88.b0.upaiyun.com/css88/2017/05/082913_k0Xg.gif" alt="img"></p>
<ul>
<li>创建者: <a href="https://daneden.me/" target="_blank" rel="external">Daniel Eden</a></li>
<li>发布: 2013</li>
<li>当前版本: <img src="https://img.shields.io/github/release/daneden/animate.css.svg?style=social&label=:" width="84" height="20" alt="img"></li>
<li>受欢迎程度: <img src="https://img.shields.io/github/stars/daneden/animate.css.svg?style=social&label=:" width="70" height="20" alt="img"></li>
<li>描述: “一个跨浏览器的 CSS 动画库。就像简单的东西一样容易使用。”</li>
<li>库大小: 43 kB</li>
<li>GitHub: <a href="https://github.com/daneden/animate.css" target="_blank" rel="external">https://github.com/daneden/animate.css</a></li>
<li>许可证: <img src="https://img.shields.io/github/license/daneden/animate.css.svg?style=social&label=:" width="114" height="20" alt="img"></li>
</ul>
<p>到 2017 年年中，它仍然是最流行、使用最广泛的CSS动画库之一。其压缩后的文件也非常小（16.6kb），也可以用于移动端网站。它在Github上拥有 4.2 万颗星，并且在许多大型项目中，它经常被打包成的一个组件。</p>
<p>Animate.css 在 4 年后仍然处于积极的发展阶段。这是最简单、最强大的动画库之一，我们可以毫不犹豫地在任何项目中使用它。</p>
<h1 id="Bounce-js"><a href="#Bounce-js" class="headerlink" title="Bounce.js"></a><a href="http://bouncejs.com/" target="_blank" rel="external">Bounce.js</a></h1><hr>
<p><a href="http://bouncejs.com/" target="_blank" rel="external">Bounce.js</a> 是一个 JavaScript 动画库，专注于为你的网站提供一种独特的有趣的、有弹性的、华纳兄弟式的动画。</p>
<p><img src="http://css88.b0.upaiyun.com/css88/2017/05/14948967652017-05-16-11.05.23.gif" alt="img"></p>
<ul>
<li>创建者: <a href="https://tictail.com/" target="_blank" rel="external">Tictail</a></li>
<li>发布: 2014</li>
<li>当前版本: <img src="https://img.shields.io/github/release/tictail/bounce.js.svg?style=social&amp;label=:" alt="img"></li>
<li>受欢迎程度: <img src="https://img.shields.io/github/stars/tictail/bounce.js.svg?style=social&amp;label=:" alt="img"></li>
<li>描述: “即刻创建漂亮的 CSS3 驱动的动画。”</li>
<li>库大小: 16 kB</li>
<li>GitHub: <a href="https://github.com/tictail/bounce.js" target="_blank" rel="external">https://github.com/tictail/bounce.js</a></li>
<li>许可证: <img src="https://img.shields.io/github/license/tictail/bounce.js.svg?style=social&amp;label=License" alt="img"></li>
</ul>
<p>Bounce.js是一个整齐的动画库，附有大约十个动画“预设”，因此图书馆的尺寸很小。和 animate.css 一样，动画流畅而完美。如果你的需求是 “pop and bubble(气泡和泡泡)” 样式的动画类型，并且希望降低文件大小的话 ，你可能想考虑使用这个库。</p>
<h1 id="AnimeJS"><a href="#AnimeJS" class="headerlink" title="AnimeJS"></a><a href="http://animejs.com/" target="_blank" rel="external">AnimeJS</a></h1><hr>
<p><a href="http://animejs.com/" target="_blank" rel="external">AnimeJS</a> 是我们榜单上唯一的新成，但自创作以来的12个月里，它赢得了众多的粉丝。它非常通用，功能强大，而且它也可以为 HTML 游戏动画提供动力。唯一真正的问题是，对于简单的 web 应用来说，它是否过度？</p>
<p>也许吧。但是，由于它的速度也很快，而且相对容易学习，所以很难找到它的缺点。</p>
<p>AnimeJS 被描述为一个轻量级的 JavaScript 动画库，可以与任何CSS属性、单独的 CSS transforms、SVG 或任何 DOM 属性以及 JavaScript 对象一起工作。它真的很棒 – 太棒了，事实上，我用 GIF 捕捉 下来的动画图无法对动作流畅和平滑做出公正的展示。</p>
<p><img src="http://css88.b0.upaiyun.com/css88/2017/05/14943144352017-05-09-17.18.32.gif" alt="img"></p>
<p>该项目可在 <a href="https://github.com/juliangarnier/anime" target="_blank" rel="external">GitHub</a> 上获得。</p>
<ul>
<li>创建者: <a href="https://github.com/juliangarnier" target="_blank" rel="external">Julian Garnier</a></li>
<li>发布: 2016</li>
<li>当前版本: <img src="https://img.shields.io/github/release/juliangarnier/anime.svg?style=social&amp;label=:" alt="img"></li>
<li>受欢迎程度: <img src="https://img.shields.io/github/stars/juliangarnier/anime.svg?style=social&amp;label=:" alt="img"></li>
<li>描述: “JavaScript 动画引擎。”</li>
<li>库大小: 16 kB</li>
<li>GitHub: <a href="https://github.com/juliangarnier/anime" target="_blank" rel="external">https://github.com/juliangarnier/anime</a></li>
<li>许可证: <img src="https://img.shields.io/github/license/juliangarnier/anime.svg?style=social&amp;label=License" alt="img"></li>
</ul>
<p>最令人印象深刻的是，Anime.JS 有令人惊叹的“文档”，演示 HTML，JavaScript 代码 和在一个漂亮的应用环境中使用案例。</p>
<p>简而言之，如果您对 JavaScript 动画解决方案很满意，那么就很难找到忽略 Anime.JS 的理由。</p>
<h1 id="Magic-Animations"><a href="#Magic-Animations" class="headerlink" title="Magic Animations"></a><a href="https://minimamente.com/example/magic_animations/" target="_blank" rel="external">Magic Animations</a></h1><hr>
<p><a href="https://minimamente.com/example/magic_animations/" target="_blank" rel="external">Magic Animations</a> 是最令人印象深刻的动画库之一，它有许多不同的动画，其中有许多是该库独有的。与 Animate.css 一样，你只需导入 Magic 的 CSS 文件即可。你也可以在 jQuery 中使用动画。该项目还提供了一个非常酷的演示程序。</p>
<p><img src="http://css88.b0.upaiyun.com/css88/2017/05/14948969152017-05-16-11.07.22.gif" alt="img"></p>
<ul>
<li>当前版本: <img src="https://img.shields.io/github/release/miniMAC/magic.svg?style=social&amp;label=:" alt="img"></li>
<li>受欢迎程度: <img src="https://img.shields.io/github/stars/miniMAC/magic.svg?style=social&amp;label=:" alt="img"></li>
<li>描述: “具有特效的CSS3动画”</li>
<li>库大小: 36.5 kB</li>
<li>GitHub: <a href="https://github.com/miniMAC/magic" target="_blank" rel="external">https://github.com/miniMAC/magic</a></li>
<li>许可证: <img src="https://img.shields.io/github/license/miniMAC/magic.svg?style=social&amp;label=License" alt="img"></li>
</ul>
<p>与 Animate.css 相比，Magic Animations 文件的大小适中。它的签名动画，如 magic 效果，foolish 效果和 bomb 效果非常有名。</p>
<p>如果你正在寻找一些不寻常的效果，我绝对会建议你在你的下一个项目中给这个动画库一个机会。肯定不会令你失望的。</p>
<h1 id="DynCSS"><a href="#DynCSS" class="headerlink" title="DynCSS"></a><a href="http://www.vittoriozaccaria.net/dyn-css/#what-is-it" target="_blank" rel="external">DynCSS</a></h1><hr>
<p><a href="http://www.vittoriozaccaria.net/dyn-css/#what-is-it" target="_blank" rel="external">DynCSS</a> 是一个视差效果的动画库，你可能喜欢在你的网站上使用这种效果。为了更清楚地了解如何使用这个库，看看这个<a href="http://www.vittoriozaccaria.net/dyncss-example/" target="_blank" rel="external">demo</a>。</p>
<p><img src="http://css88.b0.upaiyun.com/css88/2017/05/1450061540SzazG3O-new.jpg" alt="img"></p>
<ul>
<li>创建者: <a href="http://www.vittoriozaccaria.net/#/" target="_blank" rel="external">Vittorio Zaccaria</a></li>
<li>发布: 2014</li>
<li>当前版本: <img src="https://img.shields.io/github/release/vzaccaria/DynCSS.svg?style=social&amp;label=:" alt="img"></li>
<li>受欢迎程度: <img src="https://img.shields.io/github/stars/vzaccaria/DynCSS.svg?style=social&amp;label=:" alt="img"></li>
<li>描述: “使用动态 CSS 让你的网站活起来。”</li>
<li>GitHub: <a href="https://github.com/vzaccaria/DynCSS" target="_blank" rel="external">https://github.com/vzaccaria/DynCSS</a></li>
<li>许可协议: <img src="https://img.shields.io/github/license/vzaccaria/DynCSS.svg?style=social&amp;label=License" alt="img"></li>
</ul>
<p>DynCSS 是一个简单的库，在不久的将来可能会变得流行起来，但是它现在是一个相当新的项目，正如它在GitHub上的星星数量所展示的那样。这个库提供的一个很酷的功能是当滚动时给元素添加旋转效果，Vittorio 在 DynCSS 主页上展示了精湛的效果(这为视差相关的页面提供了一个完美的用例)。</p>
<h1 id="CSShake"><a href="#CSShake" class="headerlink" title="CSShake"></a><a href="http://elrumordelaluz.github.io/csshake/#1" target="_blank" rel="external">CSShake</a></h1><hr>
<p><a href="http://elrumordelaluz.github.io/csshake/#1" target="_blank" rel="external">CSShake</a> 提供了一个专门用于在网页中震荡元素的 CSS 库。正如您所期望的那样，您可以使用多种不同的变化来对 web 组件进行震荡。</p>
<ul>
<li>当前版本: <img src="https://img.shields.io/github/release/elrumordelaluz/csshake.svg?style=social&amp;label=:" alt="img"></li>
<li>受欢迎程度: <img src="https://img.shields.io/github/stars/elrumordelaluz/csshake.svg?style=social&amp;label=:" alt="img"></li>
<li>库大小: 78.8 kB</li>
<li>GitHub: <a href="https://github.com/elrumordelaluz/csshake" target="_blank" rel="external">https://github.com/elrumordelaluz/csshake</a></li>
<li>许可协议: <img src="https://img.shields.io/github/license/elrumordelaluz/csshake.svg?style=social&amp;label=License" alt="img"></li>
</ul>
<p>当用户输入不正确的时，苹果就会震荡某个 UI 元素(对话框，模态或文本框)以响应，就好像模仿一个人摇头表示 “不” 。CSShake 提供了一系列有趣的震荡动画，并且在这个库中变化不大（愚人码头注：效果相近）。</p>
<p>尽管目前，这个库比 DynCSS 更受欢迎，但我觉得可能因其增加了很多不必要的功能而使文件过大。虽然动画灵活的，但是我想不出太多的用例，在这些情况下，你仍然需要包含 DynCSS 动画库来进行非震荡的效果。</p>
<p>但也许只是我缺乏想象力？</p>
<h1 id="Hover-css"><a href="#Hover-css" class="headerlink" title="Hover.css"></a><a href="http://ianlunn.github.io/Hover/" target="_blank" rel="external">Hover.css</a></h1><hr>
<p><a href="http://ianlunn.github.io/Hover/" target="_blank" rel="external">Hover.css</a> 是一个 CSS 动画库，专为你的网站中使用的按钮和其他UI元素而设计。它有非常好的 2D 转换，还有许多其他精心制作的动画。</p>
<p><img src="http://css88.b0.upaiyun.com/css88/2017/05/14948971142017-05-16-11.10.32.gif" alt="img"></p>
<ul>
<li>当前版本: <img src="https://img.shields.io/github/release/IanLunn/Hover.svg?style=social&amp;label=:" alt="img"></li>
<li>受欢迎程度: <img src="https://img.shields.io/github/stars/IanLunn/Hover.svg?style=social&amp;label=:" alt="img"></li>
<li>描述: “轻松应用于于自己的元素，修改或仅用于灵感。”</li>
<li>库大小: 104.2 kB</li>
<li>GitHub: <a href="https://github.com/IanLunn/Hover" target="_blank" rel="external">https://github.com/IanLunn/Hover</a></li>
<li>许可协议: <img src="https://img.shields.io/github/license/IanLunn/Hover.svg?style=social&amp;label=License" alt="img"></li>
</ul>
<p>Hover.css 最适合用于页面中的小元素，例如按钮、Logo、SVG组件 或 要突显的图像，而不是更大、更复杂的页面动画。它有一个完整的动画案例列表，它的体积相对较大（但是，我仍然觉得这个体积可以更优化）。可以说，它最引人注目的动画效果是它独特的speech bubbles 和 curls 。</p>
<h1 id="Velocity-js"><a href="#Velocity-js" class="headerlink" title="Velocity.js"></a><a href="http://velocityjs.org/" target="_blank" rel="external">Velocity.js</a></h1><hr>
<p><a href="http://velocityjs.org/" target="_blank" rel="external">Velocity.js</a> 是另一种高级的、功能齐全的 JavaScript 动画套件，包括诸如淡入淡出、滚动、滚动、停止、结束、翻转等动画效果。</p>
<p>目前，它拥有一大批知名的公司用户，包括 Tumblr、WhatsApp、MailChimp、Scribd、Gap 和 HTC，因此你知道，这个类库已经经过了针对大型用户群和怪异边缘情况进行了测试。</p>
<p><img src="http://css88.b0.upaiyun.com/css88/2017/05/1450061570gvl0BB5-new.jpg" alt="img"></p>
<ul>
<li>创建者: <a href="https://www.julian.com/" target="_blank" rel="external">Julian Shapiro</a></li>
<li>发布: 2014</li>
<li>最近更新: <img src="https://img.shields.io/issuestats/p/github/julianshapiro/velocity.svg?style=social&amp;label=:" alt="img"></li>
<li>受欢迎程度: <img src="https://img.shields.io/github/stars/julianshapiro/velocity.svg?style=social&amp;label=:" alt="img"></li>
<li>描述: “加速JavaScript动画。”</li>
<li>库大小: 34.8 kB</li>
<li>GitHub: <a href="https://github.com/julianshapiro/velocity" target="_blank" rel="external">https://github.com/julianshapiro/velocity</a></li>
<li>许可证: <img src="https://img.shields.io/github/license/julianshapiro/velocity.svg?style=social&amp;label=License" alt="img"></li>
</ul>
<p>Velocity 可能并不适合某些人，因为它是一个 JavaScript 动画引擎，它实际上是一个使用与 jQuery 的  $.animate() 相同API的动画引擎。他既可以通过 jQuery 使用，也可以不通过 jQuery 使用。也就是说，它的速度非常快，它的特点包括 color animation, transforms, loops, easing – 从本质上来说，它是 jQuery 和 CSS transitions 最好组合。</p>
<h1 id="AniJS"><a href="#AniJS" class="headerlink" title="AniJS"></a><a href="http://anijs.github.io/" target="_blank" rel="external">AniJS</a></h1><hr>
<p>我们最后这个库独特的方法很有趣。<a href="http://anijs.github.io/" target="_blank" rel="external">AniJS</a> 是一个动画库，它允许你用简单的‘sentence-like’语句为元素添加动画。</p>
<p>采取以下格式：</p>
<p>最后这个库因其独特的方法而非常有趣。AniJS是一个动画库，允许你用下面的格式为元素添加动画效果：</p>
<p>If click, On Square, Do wobble animated To .container-box</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;div data-anijs=<span class="string">"if: click, do: flipInY, to: .container-box"</span>&gt;&lt;/div&gt;</div></pre></td></tr></table></figure>
<p>如果你对 JavaScript 不太熟悉，这可能是进入JS编排动作的好方法。</p>
<p><img src="http://css88.b0.upaiyun.com/css88/2017/05/14948977942017-05-16-11.19.29.gif" alt="img"></p>
<ul>
<li>创建者: <a href="https://github.com/anijs" target="_blank" rel="external">anijs</a></li>
<li>发布: 2014</li>
<li>最近更新: <img src="https://img.shields.io/issuestats/p/github/anijs/anijs.svg?style=social&amp;label=:" alt="img"></li>
<li>受欢迎程度: <img src="https://img.shields.io/github/stars/anijs/anijs.svg?style=social&amp;label=:" alt="img"></li>
<li>描述: “一个动画库，无需编码即可提升网页设计。”</li>
<li>库大小: 10.5 kB</li>
<li>GitHub: <a href="https://github.com/anijs/anijs" target="_blank" rel="external">https://github.com/anijs/anijs</a></li>
<li>许可证: <img src="https://img.shields.io/github/license/anijs/anijs.svg?style=social&amp;label=License" alt="img"></li>
</ul>
<p>AniJS 是一个功能是很合理的库。与其他动画库相比，它用于实现的格式是相当原始和与众不同的（其他许多库可能会发现非常规的使用）。</p>
<p>尽管如此，这个库还是值得一试，至少在你的项目中可以尝试一下。它可能缺乏一些竞争对手的整体实力和光环，但它有潜力会在未来越来越强大。</p>
<pre><code>愚人码头注：这里有一个 CSS3 动画集合项目，可以导出单个动画的 CSS3 样式，建议和 AniJS 配合使用。[AniCollection](http://anicollection.github.io/#/)
</code></pre><h1 id="你应该选哪个库？"><a href="#你应该选哪个库？" class="headerlink" title="你应该选哪个库？"></a>你应该选哪个库？</h1><hr>
<p>有许多动画库已经准备就绪，等待在您的项目中实现。上面列出的是一些具有最佳和最稳定的几个。</p>
<p>如果您正在寻找一个简单易用的强大的 CSS 解决方案。<strong>Animate.CSS</strong> 可能是最通用的、最适合使用的选项。</p>
<p>如果你正在寻找一个更完整、功能强大的JavaScript选项，<strong>VelocityJS</strong> 和 <strong>Anime.JS</strong> 不分伯仲。Velocity 目前拥有更多的动画实现 和 更大的使用量基础，但是对于 Anime.JS 这样一个新项目来说是令人难以置信的完美 和 令人激动的。目前，Anime.JS 美丽的文档可能足以赢得我们的青睐。</p>
<p>尽管在您的 web 应用程序中使用一个动画库可以提高交互性，但是过度使用它可能会违背用户的目的，并且经常使用户迷惑。请小心谨慎地使用它们。</p>
<p>转载：<a href="http://www.css88.com/archives/7389" target="_blank" rel="external">http://www.css88.com/archives/7389</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前端网页设计在过去的十年里经历了一场革命。在2007年，我们大多数人仍在设计静态杂志布局，在2017年，我们重新设计了数字机器，有成千上万的调整、协调、移动的部件。&lt;/p&gt;
&lt;p&gt;简单的说，&lt;strong&gt;很好的UI设计师还需要成为很好的动画师&lt;/strong&gt; – 需要对
    
    </summary>
    
    
      <category term="css3" scheme="http://caoweiqiang.com/tags/css3/"/>
    
      <category term="javaScript" scheme="http://caoweiqiang.com/tags/javaScript/"/>
    
  </entry>
  
  <entry>
    <title>windows使用git时出现：warning:LF will be replaced by CRLF</title>
    <link href="http://caoweiqiang.com/git-warning/"/>
    <id>http://caoweiqiang.com/git-warning/</id>
    <published>2017-06-02T03:00:16.236Z</published>
    <updated>2017-06-07T01:50:01.581Z</updated>
    
    <content type="html"><![CDATA[<p>windows中的换行符为 CRLF，而在Linux下的换行符为LF，所以在执行add . 时出现提示，解决办法： </p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">rm -rf .git  <span class="comment">//删除.git</span></div><div class="line">git config --global core.autocrlf <span class="literal">false</span>  <span class="comment">//禁用自动转换</span></div></pre></td></tr></table></figure>
<p>然后重新执行： </p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git init</div><div class="line">git add .</div></pre></td></tr></table></figure>
<p>转载：<a href="http://blog.csdn.net/unityoxb/article/details/20768687" target="_blank" rel="external">http://blog.csdn.net/unityoxb/article/details/20768687</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;windows中的换行符为 CRLF，而在Linux下的换行符为LF，所以在执行add . 时出现提示，解决办法： &lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;d
    
    </summary>
    
    
      <category term="warning:LF will be replaced by CRLF" scheme="http://caoweiqiang.com/tags/warning-LF-will-be-replaced-by-CRLF/"/>
    
  </entry>
  
  <entry>
    <title>零基础搭建免费Hexo个人博客并部署到Github</title>
    <link href="http://caoweiqiang.com/hexo-blog/"/>
    <id>http://caoweiqiang.com/hexo-blog/</id>
    <published>2017-06-01T10:00:15.955Z</published>
    <updated>2017-06-07T06:35:49.965Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>博客系统有很多，每一个的搭建方式也各有特色，也看了不少的教程和方法，但是总觉得或多或少都有些坑，因为每个人出的问题不一样，所以侧重点也不尽相同，也可能我写的也有很多坑，但是我根据我的实际情况记录下我的过程和我可能容易忽略的地方，针对的对象是0基础的小小白，不求一语道破天机，只愿过程无缝跟进，所以我话语说的比较啰嗦点，尽量多上图，有不足之处请各位看官多多提出宝贵意见为谢！好了，其他不多说，进入正题：<br>国际惯例，简单说下Hexo：</p>
<h2 id="什么是-Hexo？"><a href="#什么是-Hexo？" class="headerlink" title="什么是 Hexo？"></a>什么是 Hexo？</h2><p>官方给的解释是：Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p>
<h2 id="Hexo的好处？"><a href="#Hexo的好处？" class="headerlink" title="Hexo的好处？"></a>Hexo的好处？</h2><p>在官方的文档中并没有说自己的博客系统多么多么牛XX，而是直接进入正题</p>
<h2 id="Hexo官方文档"><a href="#Hexo官方文档" class="headerlink" title="Hexo官方文档"></a>Hexo官方文档</h2><p>英文原版文档：<br><a href="https://hexo.io/docs/index.html" target="_blank" rel="external">https://hexo.io/docs/index.html</a><br>中文文档：<br><a href="https://hexo.io/zh-cn/docs/index.html" target="_blank" rel="external">https://hexo.io/zh-cn/docs/index.html</a></p>
<p>简单说下整体流程，做到心中有数：<br>node.js—&gt;git—&gt;Hexo—&gt;部署到github</p>
<h2 id="开始："><a href="#开始：" class="headerlink" title="开始："></a>开始：</h2><p>说明：因为我自己电脑是windows 10，所以一下所有内容都是在windows下操作。</p>
<blockquote>
<p>1.安装环境（node.js环境和git环境）</p>
</blockquote>
<p>两个环境，其实就是两个软件，从官方下载安装包，一路 “下一步”安装完成，这里不再过多赘述；<br>软件版本大同小异，不用太纠结（我现在node版本是V6.10.2），地址：</p>
<p>git官网：<a href="https://git-scm.com/" target="_blank" rel="external">https://git-scm.com/</a><br>node.js官网：<a href="https://nodejs.org/" target="_blank" rel="external">https://nodejs.org/</a></p>
<blockquote>
<p>2.验证软件是否安装成功</p>
</blockquote>
<p>键盘快捷键win+r（或者鼠标“开始菜单”点击“运行”），打开“运行”窗口，键入“cmd”<br><img src="/img/102844jnd4ddb4eduond43.jpg" alt="img"></p>
<p>键盘“回车”（或者点击“确定”），会弹出命令行界面，然后依次分别键入 ：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">git --version</div><div class="line">node -v</div><div class="line">npm -v</div></pre></td></tr></table></figure></p>
<h3 id="注意：git空格之后是两个横杠"><a href="#注意：git空格之后是两个横杠" class="headerlink" title="注意：git空格之后是两个横杠"></a>注意：git空格之后是两个横杠</h3><p>如图：<br><img src="/img/102941w1gwkjge0950001k.jpg" alt="img"></p>
<p>确认我们软件环境没有问题的话，我们就可以继续下一步了。</p>
<blockquote>
<p>3.注册github账号</p>
</blockquote>
<ul>
<li>进入github官网（<a href="https://github.com/）进行注册账号，用户名，邮箱，密码，然后点击注册：" target="_blank" rel="external">https://github.com/）进行注册账号，用户名，邮箱，密码，然后点击注册：</a><br>零基础搭建免费Hexo个人博客并部署到Github（上）</li>
</ul>
<p><img src="/img/175702t3icl4ihbuzddxu2.jpg" alt="img"></p>
<ul>
<li>直接选择免费的就可以(因为我已经注册过了，为了截图，我就随便编了一个号，打个码，证明我不是故意的emoticon)：<br>零基础搭建免费Hexo个人博客并部署到Github（上）</li>
</ul>
<p><img src="/img/180051nnzgn560ime2n323.jpg" alt="img"></p>
<ul>
<li>下面其他内容，根据自己的情况，想填填，不想直接点击下面的按钮即可<br>零基础搭建免费Hexo个人博客并部署到Github（上）</li>
</ul>
<p><img src="/img/180317gzbe0dxxmmom4xoo.jpg" alt="img"></p>
<ul>
<li>你注册的邮箱会有收到一个邮件，然后按照提示，激活下就可以了<br>（此处图略）</li>
</ul>
<blockquote>
<p>4.Github新建项目</p>
</blockquote>
<p>注册成功之后，你就可以新建项目了；</p>
<ul>
<li>在导航条右上角，点击“+”，选择，”New repository”点击，新建一个版本库<br>零基础搭建免费Hexo个人博客并部署到Github（上）</li>
</ul>
<p><img src="/img/180946ytqq1sujwysuquus.jpg" alt="img"></p>
<ul>
<li>在Repository name下面填写下yourname.github.io(yourname与你的注册用户名一致,这样yourname.github.io这个就是你博客的域名了)，然后点击下面的绿色按钮，创建这个仓库<br>新建git仓库</li>
</ul>
<p><img src="/img/104235vrnduf8fdg7f8rdi.jpg" alt="img"></p>
<ul>
<li>你会看到下图这个界面，这里有你的github地址的Quick setup，你可以点击右边的按钮复制这个链接到剪切板<br>git仓库链接</li>
</ul>
<p><img src="/img/104458ffiqfdops2ypnopm.jpg" alt="img"></p>
<p>到此，你github上的设置基本就结束了。</p>
<blockquote>
<p>5.简历本地项目目录，修改镜像源</p>
</blockquote>
<p>以上都搞定只有，回到你本地环境；</p>
<ul>
<li>在电脑上人任意找个合适的位置新建一个文件夹（名字不要为中文就好，比如我在F盘新建文件夹，取名叫Git），用来存放你的博客系统：<br>git文件夹</li>
</ul>
<p><img src="/img/104839gwprl3fm2frfl0xr.jpg" alt="img"></p>
<ul>
<li>然后进入这个文件夹，任意位置右键单击，选择 “Git bash here”，之后会弹出一个命令行的弹框<br>右键git bash</li>
</ul>
<p><img src="/img/105242yn6s6p281rsj674t.jpg" alt="img"></p>
<ul>
<li>之后就是我们用集成的npm安装Hexo了，但是npm在国内不是很文档，经常被“qiang”，保险起见，我把npm镜像修改为国内淘宝镜像（cnpm）</li>
</ul>
<h3 id="说明：npm和cnpm：npm原版的叫npm，用淘宝的镜像的话，换了一个马甲，叫cnpm，使用方法就是把之前的npm替换为cnpm而已，如果你用vpn后者其他条件，请忽略这一步；"><a href="#说明：npm和cnpm：npm原版的叫npm，用淘宝的镜像的话，换了一个马甲，叫cnpm，使用方法就是把之前的npm替换为cnpm而已，如果你用vpn后者其他条件，请忽略这一步；" class="headerlink" title="说明：npm和cnpm：npm原版的叫npm，用淘宝的镜像的话，换了一个马甲，叫cnpm，使用方法就是把之前的npm替换为cnpm而已，如果你用vpn后者其他条件，请忽略这一步；"></a>说明：npm和cnpm：npm原版的叫npm，用淘宝的镜像的话，换了一个马甲，叫cnpm，使用方法就是把之前的npm替换为cnpm而已，如果你用vpn后者其他条件，请忽略这一步；</h3><p>cnpm官网：<a href="http://npm.taobao.org/" target="_blank" rel="external">http://npm.taobao.org/</a></p>
<p>具体命令：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install -g cnpm --registry=https:<span class="comment">//registry.npm.taobao.org</span></div></pre></td></tr></table></figure></p>
<p><img src="/img/110559zj9be5w3jswejcqj.jpg" alt="img"></p>
<p>以后所有npm的命令，我们这里都可以用cnpm代替。</p>
<blockquote>
<p>6.安装Hexo系统</p>
</blockquote>
<ul>
<li>我们就可以使用cnpm来安装Hexo了，命令：<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cnpm install -g hexo-cli</div></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="/img/111557y055a9b1qb00evew.jpg" alt="img"></p>
<ul>
<li>继续输入命令：<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cnpm install hexo --save</div></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="/img/111557y055a9b1qb00evew.jpg" alt="img"></p>
<p>到此为止我们就把Hexo安装完毕了；</p>
<ul>
<li>为了确保我们安装成功，我们验证下（原理很简单，我们能看到 Hexo的版本号就说明安装成功了）：<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">检测hexo版本</div></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="/img/112001fgq5eyl05qexe5v5.jpg" alt="img"></p>
<p>好了，到此为止，我们安装Hexo的任务就算完成。</p>
<blockquote>
<p>7.本地测试Hexo系统</p>
</blockquote>
<p>Hexo的使用，是先在我们本地运行，运行没有问题d，然后再同步到我们的其他托管平台（比如github）<br>接下来我们来对Hexo具体操作：</p>
<ul>
<li>因为是第一次使用，所以首先我们先初始化hexo，命令是：<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo init</div></pre></td></tr></table></figure>
</li>
</ul>
<p>如果第一次初始化失败，可以多尝试几次，因为我已经安装过，所以截图我的可能和大家的有些许出入，但是最后的结果是一样的，初始化可能稍微慢几秒，请耐心等待下下。</p>
<p><img src="/img/114106jowdmdjsty1o88s7.jpg" alt="img"></p>
<ul>
<li>接下来，安装生成器，命令行：<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cnpm install</div></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="/img/114551vd8h8b5nw0yujnru.jpg" alt="img"></p>
<p>到此为止，我们本地一安装hexo已经完毕；</p>
<ul>
<li>我们可以运行hexo系统试下，命令是：<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo s -g</div></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="/img/114813aeed1lk7kk1htubl.jpg" alt="img"></p>
<ul>
<li>然后打开我们的浏览器，在地址栏输入<a href="http://localhost:4000/，见证奇迹的时刻" target="_blank" rel="external">http://localhost:4000/，见证奇迹的时刻</a></li>
</ul>
<p><img src="/img/115012l7le4s37ej3svv6u.jpg" alt="img"></p>
<p>如果想停止，只需在命令行界面中按住键盘上ctrl+c 即可</p>
<blockquote>
<p>8.本地使用Hexo发布文章</p>
</blockquote>
<p>Hexo系统能跑通了之后，接下来我们一起操作下hexo，首先，写一篇文章</p>
<ul>
<li>输入创建文章命令，会生成一个md文件(具体生成的文件路径是：/blog/source/_posts/)，具体操作命令是：<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo <span class="keyword">new</span> <span class="string">"我的第一篇文章"</span></div></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="/img/115259x3a5rg49v1k59j9k.jpg" alt="img"></p>
<ul>
<li>然后我们就可以编辑下我们的博客文章内容了，当然你如果会vim或者vi的话，可以直接进入编辑，我这里用比较直观的sublime软件进行编辑（当然用其他编辑器也可以，不要用记事本）</li>
</ul>
<p><img src="/img/115420lhgo5o7253gg2hs2.jpg" alt="img"></p>
<ul>
<li>编辑完之后,我们需要生成我们的文章，回到我们的命令行，ctrl+c结束我hexo运行（不结束我们无法进行继续在当前命令行操作），当然我们也可以在Git的根目录下重新右键 Git bash here 开一个命令行，<br>在命令行，键入：<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo g -d</div></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="/img/120251li86ipnx685pu88i.jpg" alt="img"></p>
<ul>
<li>此时，如果你是新建命令行窗口的话，那么直接在你浏览器刷新就可以；</li>
</ul>
<p>如果没有新建命令行窗口的话，你需要重新打开hexo服务，键入命令：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo s -g</div></pre></td></tr></table></figure></p>
<p><img src="/img/120510gn9ohcrfrrozxfca.jpg" alt="img"></p>
<p>好了，到此为止，我们本地运行hexo博客就先到这里了。</p>
<blockquote>
<p>9.本地Hexo系统发布到Github</p>
</blockquote>
<p>接下来，我们就是把本地的hexo博客系统发布到github上，如果纯粹的用git命令commit提交，是不可以的，会有各种报错，因为我们的博客系统有很多特殊的文件，不是一般普通文件，所以我们需要借助ssh keys</p>
<ul>
<li>设置本地ssh keys</li>
</ul>
<p>首先，我们需要先在本地生成一个ssh keys，在命令行键入：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh-keygen -t rsa -C <span class="string">"邮件地址@youremail.com"</span></div></pre></td></tr></table></figure></p>
<h3 id="注意：-这里的-C-是大写"><a href="#注意：-这里的-C-是大写" class="headerlink" title="注意： 这里的-C 是大写"></a>注意： 这里的-C 是大写</h3><p>之后会有一个提示，直接输入回车就好；</p>
<ul>
<li><p>再然后会让你输入密码，这个密码表示在你提交项目的时候，进行的密码验证，防止别人往你项目中提交内容，如果为空的话提交项目时则不用输入，<br>如果你想输入的话，就输入一下，注意，输入密码的时候没有*字样的，你直接输入就可以了，输入完毕之后直接敲回车，会提示你再次输入密码进行确认；<br>我这里就不设置密码了，所以直接一路回车下去；</p>
</li>
<li><p>最后看到这样的界面，就成功设置ssh keys了：</p>
</li>
</ul>
<p><img src="/img/120912xdlsfzdtwa0l2xz0.jpg" alt="img"></p>
<p>说明：因为我电脑之前设置过ssh keys，所以多了一步重新写入新的key的提示；</p>
<p>本机设置完ssh keys，需要和你的github账号进行绑定关联，才能成功把你本地的环境连接到github上；</p>
<blockquote>
<p>10.添加SSH Key到GitHub</p>
</blockquote>
<ul>
<li>首先，需要找到本地的keys的位置，一般路径是C:\Documents and Settings\Administrator.ssh这个文件夹下（如果隐藏，请显示所有文件和文件夹，具体方法就不在赘述），我的是win10，所以，我的路径是：</li>
</ul>
<p><img src="/img/121131wyzoo4bm4yj79non.jpg" alt="img"></p>
<h3 id="这里说明下，id-rsa-是私钥，id-rsa-pub是公钥"><a href="#这里说明下，id-rsa-是私钥，id-rsa-pub是公钥" class="headerlink" title="这里说明下，id_rsa 是私钥，id_rsa.pub是公钥"></a>这里说明下，id_rsa 是私钥，id_rsa.pub是公钥</h3><ul>
<li>然后用编辑器（不要用记事本），打开id_rsa.pub公钥文件，如图：</li>
</ul>
<p><img src="/img/210852kodxfix33e2hdqed.jpg" alt="img"></p>
<ul>
<li>接下来就是把这个公钥内容绑定到github上，ctrl+a，复制所有内容，打开github，找到setting–&gt;SSH and GPG keys–&gt;New SSH key，然后填入对应的内容（title随便填，key就是你复制的那一堆），点击 add ssh key，然后会让你再次输入github密码进行确认，如图：</li>
</ul>
<p><img src="/img/121356si1usu2kw7z0llk9.jpg" alt="img"><br><img src="/img/211338mpb6plcq6ppcocml.jpg" alt="img"><br><img src="/img/211338izbprpvvey6scdmy.jpg" alt="img"><br><img src="/img/211855q79b7zl9toplxmqm.jpg" alt="img"></p>
<p>成功之后，理论上你会收到一个邮件，意思是表示你添加了一个ssh key完成；</p>
<ul>
<li>为了验证是否配置成功，我们可以测试下，复制如下代码（注意T是大写）:<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh -T git@github.com</div></pre></td></tr></table></figure>
</li>
</ul>
<p>如果成功，会有你会看到下图：</p>
<p><img src="/img/121926nvv27ev92777rab7.jpg" alt="img"></p>
<blockquote>
<p>11.本地数据同步到github</p>
</blockquote>
<ul>
<li>首先，在命令行中配置github信息，分别键入以下两条命令：<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git config --global user.name <span class="string">"你的用户名"</span></div><div class="line">git config --global user.email <span class="string">"你的邮箱"</span></div></pre></td></tr></table></figure>
</li>
</ul>
<p>这两行代码运行之后没有任何反应，这个是正常的，如图</p>
<p><img src="/img/223013e8iz97899hyvaw99.jpg" alt="img"></p>
<ul>
<li>接下来，安装hexo git插件，命令：<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cnpm install hexo-deployer-git --save</div></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="/img/122221xisnj6ebptazduud.jpg" alt="img"></p>
<ul>
<li>然后，在正式部署之前，我们需要修改下hexo的部署文件_config.yml，路径就在你建立博客的文件夹的根目录</li>
</ul>
<p><img src="/img/224216vi8m26ri99z99d8o.jpg" alt="img"></p>
<p>用sublime打开下这个文件，里面的内容很多，具体每一个代表什么意思，hexo文档中有详细解释，我们只需要修改url和最后几个参数就可以了，如图：</p>
<p><img src="/img/122631v83dvh1pnmp0v18d.jpg" alt="img"><br><img src="/img/122629l3zst66atc2q3eg3.jpg" alt="img"></p>
<p>注：<br>1.打码处为自己的github用户名；<br>2.修改_config.yml文件的时候，注意deploy，URL等标签，在每个冒号后面必须要空格，否则后面的命令会没有反应或者报错（此处感谢简书@Raspberry）；<br>3.缩进要用空格，不能用tab键缩进；</p>
<p>保存之后，就剩下我们最后一步了；</p>
<ul>
<li>在我们的命令行中，键入：<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo d -g</div></pre></td></tr></table></figure>
</li>
</ul>
<p>会有一段很长的代码（截图长度有限，所以这里只贴出头部和尾部）：</p>
<p><img src="/img/230835hnpvzl68669nd969.jpg" alt="img"></p>
<blockquote>
<p>12.见证奇迹的时刻：</p>
</blockquote>
<p>在浏览器中打开网址：“yourname.github.io”</p>
<p><img src="/img/123258fqyhbr6a47yoobxn.jpg" alt="img"></p>
<p>转载：<a href="http://www.qdfuns.com/notes/14464/5c9705f6721e0a1357fdf990eee64cbd.html" target="_blank" rel="external">http://www.qdfuns.com/notes/14464/5c9705f6721e0a1357fdf990eee64cbd.html</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;博客系统有很多，每一个的搭建方式也各有特色，也看了不少的教程和方法，但是总觉得或多或少都有些坑，因为每个人出的问题不一样，所以侧重点也不尽相
    
    </summary>
    
      <category term="前端" scheme="http://caoweiqiang.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="Hexo" scheme="http://caoweiqiang.com/tags/Hexo/"/>
    
      <category term="搭建免费Hexo个人博客" scheme="http://caoweiqiang.com/tags/%E6%90%AD%E5%BB%BA%E5%85%8D%E8%B4%B9Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="搭建免费Hexo个人博客并部署到Github" scheme="http://caoweiqiang.com/tags/%E6%90%AD%E5%BB%BA%E5%85%8D%E8%B4%B9Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%B9%B6%E9%83%A8%E7%BD%B2%E5%88%B0Github/"/>
    
  </entry>
  
</feed>
