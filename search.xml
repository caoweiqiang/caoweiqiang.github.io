<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[详解百度地图API之地图标注]]></title>
      <url>/baidu-api/</url>
      <content type="html"><![CDATA[<h4 id="一、标注概述"><a href="#一、标注概述" class="headerlink" title="一、标注概述"></a>一、标注概述</h4><p>标注（Marker）是用来表示一个点位置的可见元素，每个标注自身都包含地理信息。比如你在西单商场位置添加了一个标注，不论地图移动、缩放，标注都会跟随一起移动，保证其始终指向正确的地理位置。</p>
<p><img src="http://images.51cto.com/files/uploadimg/20110916/1040051.jpg" alt="img"><br>从上面的图可以看出，不论地图如何变化标注始终指向“西单商场”的位置。 </p>
<h4 id="二、如何知道某个点的坐标？"><a href="#二、如何知道某个点的坐标？" class="headerlink" title="二、如何知道某个点的坐标？"></a>二、如何知道某个点的坐标？</h4><p>上例中我们在西单商场位置添加了一个标注，那么我是如何知道它的坐标点呢？可以通过API的事件机制来获取：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">map.addEventListener(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;  </div><div class="line"><span class="built_in">console</span>.log(e.point);  </div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>我们在map对象上添加了一个click事件的监听函数，当点击地图上某个位置时，监听函数通过控制台把当前点击的位置输出出来（注意需要有控制台的支持，比如firebug，如果没有控制台则可使用alert把point的lng和lat属性输出出来）。此外，你也可以使用API提供的坐标拾取工具来完成（<a href="http://dev.baidu.com/wiki/static/map/API/tool/getPoint/" target="_blank" rel="external">http://dev.baidu.com/wiki/static/map/API/tool/getPoint/</a>），它支持检索并且点击地图上任意位置时会出现该位置的坐标。</p>
<h4 id="三、标注元素组成"><a href="#三、标注元素组成" class="headerlink" title="三、标注元素组成"></a>三、标注元素组成</h4><p>从DOM元素构成角度看，一个完整的标注是由以下几个部分组成的：</p>
<p>标注点击区域</p>
<p>标注图标</p>
<p>标注阴影</p>
<p>下面是示意图：</p>
<p><img src="http://images.51cto.com/files/uploadimg/20110916/1040052.jpg" alt="img"></p>
<p>在地图API实现中，这三个DOM元素分别位于不同的容器中，这些容器可以通过map.getPanes()方法获得，其中markerMouseTarget就是标注点击区域所在容器、markerPane为标注图标所在容器，markerShadow为标注阴影所在图层。你可能会在自定义覆盖物时需要这些容器对象，这里只需要知道Marker的各个部分是如何放置的即可。</p>
<h4 id="四、自定义标注图标"><a href="#四、自定义标注图标" class="headerlink" title="四、自定义标注图标"></a>四、自定义标注图标</h4><p>标注的图标是可以自定义的，通过Icon类可以自定义标注的图标，比如我希望使用下面这个图片作为标注图标：</p>
<p><img src="http://images.51cto.com/files/uploadimg/20110916/1040053.png" alt="img"></p>
<p>已知这个图标大小为20x32。我们初始化地图，接着定义Icon，并赋给一个Marker实例：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">varmap =newBMap.Map(<span class="string">'container'</span>);  </div><div class="line">map.centerAndZoom(newBMap.Point(<span class="number">116.380797</span>, <span class="number">39.918497</span>), <span class="number">18</span>);  </div><div class="line"><span class="keyword">var</span> icon = <span class="keyword">new</span> BMap.Icon(<span class="string">'pin.png'</span>, <span class="keyword">new</span> BMap.Size(<span class="number">20</span>, <span class="number">32</span>), &#123;  </div><div class="line"><span class="attr">anchor</span>: <span class="keyword">new</span> BMap.Size(<span class="number">10</span>, <span class="number">30</span>)  </div><div class="line">&#125;);varmkr =newBMap.Marker(newBMap.Point(<span class="number">116.38075</span>,<span class="number">39.918986</span>), &#123;  </div><div class="line"><span class="attr">icon</span>: icon  </div><div class="line">&#125;);  </div><div class="line">map.addOverlay(mkr);</div></pre></td></tr></table></figure>
<p>我们给定icon所需图片的url，接着是图片的尺寸，另外我们还增加了anchor属性，这个是干什么用的呢？在自定义标注图标时有一点需要注意的就是标注的定位点（anchor），通俗的讲就是要指定图片的哪个位置是与标注真正的位置对应在一起。我们通过下面的图示来说明：</p>
<p><img src="http://images.51cto.com/files/uploadimg/20110916/1040054.png" alt="img"></p>
<p>我们获取到地图上一个位置（上图中标注下端所在的黑色小方块），那么我也希望我标注中间下端指向这个位置，这个就需要通过anchor来调节。anchor的意义如下图所示：</p>
<p><img src="http://images.51cto.com/files/uploadimg/20110916/1040055.png" alt="img"><br>即定位点距离图片左上角的偏移量。</p>
<p>如果不给anchor的话，API会自动获取图片中心点作为anchor位置：</p>
<p><img src="http://images.51cto.com/files/uploadimg/20110916/1040056.png" alt="img"><br>我们看到标注图片中心的位置覆盖在那个小方块区域。</p>
<p>除了anchor之外，还有一个infoWindowAnchor属性，它是用来控制信息窗口开启的位置的（注意这里调用的是Marker的openInfoWindow方法，而不是Map的openInfoWindow方法），默认情况下它和icon的anchor是一个位置：</p>
<p><img src="http://images.51cto.com/files/uploadimg/20110916/1040057.png" alt="img"></p>
<p>标注被InfoWindow的底角挡住了，通过infoWindowAnchor属性就可以改变开启位置：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">varicon =newBMap.Icon(<span class="string">'pin.png'</span>, newBMap.Size(<span class="number">20</span>, <span class="number">32</span>), &#123;  </div><div class="line"><span class="attr">anchor</span>: newBMap.Size(<span class="number">10</span>, <span class="number">30</span>),  </div><div class="line"><span class="attr">infoWindowAnchor</span>: newBMap.Size(<span class="number">10</span>, <span class="number">0</span>)  </div><div class="line">&#125;)</div></pre></td></tr></table></figure>
<p>再看看效果：</p>
<p><img src="http://images.51cto.com/files/uploadimg/20110916/1040058.png" alt="img"><br>尖角位置已经发生了改变。</p>
<h4 id="五、标注拖拽"><a href="#五、标注拖拽" class="headerlink" title="五、标注拖拽"></a>五、标注拖拽</h4><p>标注支持拖拽，并且可以配置是否有动画效果，我们修改创建标注的代码：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">varmkr =newBMap.Marker(newBMap.Point(<span class="number">116.38075</span>,<span class="number">39.918986</span>), &#123;  </div><div class="line"><span class="attr">icon</span>: icon,  </div><div class="line"><span class="attr">enableDragging</span>: <span class="literal">true</span>,  </div><div class="line"><span class="attr">raiseOnDrag</span>: <span class="literal">true</span>&#125;);</div></pre></td></tr></table></figure>
<p>这里开启了拖拽功能以及响应的动画效果。如果此时拖拽地图你会得到如下效果：</p>
<p><img src="http://images.51cto.com/files/uploadimg/20110916/1040059.png" alt="img"><br>通过监听标注的dragend事件，你可以知道拖拽结束后标注的地理位置：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">mkr.addEventListener(<span class="string">'dragend'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;  </div><div class="line">alert(e.point.lng +<span class="string">', '</span>+e.point.lat);  </div><div class="line">&#125;)</div></pre></td></tr></table></figure>
<h4 id="六、标注阴影"><a href="#六、标注阴影" class="headerlink" title="六、标注阴影"></a>六、标注阴影</h4><p>为了增加立体感，可以单独给标注添加阴影，当然你也可以把阴影直接画在icon所用的图片上，但是由于阴影和标注本身在一起，所以就不建议使用任何动画效果，否则会缺乏真实感。阴影可以通过MarkerOptions的shadow属性配置，类型也是一个Icon实例。具体使用方法和icon属性一样，这里就不赘述了。</p>
<p>转载：<a href="http://developer.51cto.com/art/201109/291710.htm" target="_blank" rel="external">http://developer.51cto.com/art/201109/291710.htm</a></p>
]]></content>
      
        
        <tags>
            
            <tag> 百度地图 </tag>
            
            <tag> 百度地图API </tag>
            
            <tag> 地图标注 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[hexo博客安装RSS插件]]></title>
      <url>/hexo-rss/</url>
      <content type="html"><![CDATA[<p>hexo博客不能使用RSS功能，需要按照RSS插件，才能正常使用。</p>
<p>如下配置步骤：</p>
<p>1、安装插件，进入本地hexo目录，打开GIT bash，输入一下命令。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-generator-feed</div></pre></td></tr></table></figure>
<p><img src="http://img.blog.csdn.net/20160827093755958" alt="img"></p>
<p>2、添加配置。在本地hexo根目录下_config.yml文件中添加一下配置。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"># Extensions</div><div class="line">## Plugins: http://hexo.io/plugins/</div><div class="line">#RSS订阅</div><div class="line">plugin:</div><div class="line">- hexo-generator-feed</div><div class="line">#Feed Atom</div><div class="line">feed:</div><div class="line">type: atom</div><div class="line">path: atom.xml</div><div class="line">limit: 20</div></pre></td></tr></table></figure>
<p>3、添加主题配置，在主题目录下_config.yml目录下，添加如下配置。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rss: <span class="regexp">/atom.xml</span></div></pre></td></tr></table></figure>
<p><img src="http://img.blog.csdn.net/20160827093903148" alt="img"></p>
<p>转载：<a href="http://blog.csdn.net/u011303443/article/details/52333695" target="_blank" rel="external">http://blog.csdn.net/u011303443/article/details/52333695</a></p>
]]></content>
      
        
        <tags>
            
            <tag> hexo </tag>
            
            <tag> RSS插件 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[2017 年用于 UI 设计的 CSS3 和 JavaScript 动画库(TOP 9)]]></title>
      <url>/css3-js/</url>
      <content type="html"><![CDATA[<p>前端网页设计在过去的十年里经历了一场革命。在2007年，我们大多数人仍在设计静态杂志布局，在2017年，我们重新设计了数字机器，有成千上万的调整、协调、移动的部件。</p>
<p>简单的说，<strong>很好的UI设计师还需要成为很好的动画师</strong> – 需要对网络动画技术有一个很好的理解。</p>
<p>这是我们指南中最新更新的，帮助你为每个任务选择正确的动画库。我们将通过 9 个免费的、编码良好的动画库，最适合于UI设计，它们的优点和缺点，以及何时选择它们。</p>
<p>请记住，我们是从一个熟悉代码的UI设计师（而不是从代精通代码的开发人员）的角度来看待每个库。这些库中有一些是纯 CSS 实现的。其他是JavaScript 的，但是，除了了解基本的 HTML/CSS 之外，使用他们你不需要更多的其他知识。链接一个动画库 – 添加一个 CSS 类 即可。</p>
<p>2017 年 9 大动画库列表</p>
<blockquote>
<p>1.Animate.css<br>2.Bounce.js<br>3.AnimeJS<br>4.Magic Animations<br>5.DynCSS<br>6.CSShake<br>7.Hover.CSS<br>8.Velocity.js<br>9.AniJS</p>
</blockquote>
<h1 id="Animate-css"><a href="#Animate-css" class="headerlink" title="Animate.css"></a><a href="https://daneden.github.io/animate.css/" target="_blank" rel="external">Animate.css</a></h1><hr>
<p><a href="https://daneden.github.io/animate.css/" target="_blank" rel="external">Animate.css</a>是最简单、最易用的 CSS 动画库之一。将动画库应用到你的项目中，就像链接 CSS 并且在 HTML 元素中添加所需的 CSS 类一样简单。。如果您愿意，还可以使用 jQuery 触发特定事件的动画。</p>
<p>  <img src="http://css88.b0.upaiyun.com/css88/2017/05/082913_k0Xg.gif" alt="img"></p>
<ul>
<li>创建者: <a href="https://daneden.me/" target="_blank" rel="external">Daniel Eden</a></li>
<li>发布: 2013</li>
<li>当前版本: <img src="https://img.shields.io/github/release/daneden/animate.css.svg?style=social&label=:" width="84" height="20" alt="img"></li>
<li>受欢迎程度: <img src="https://img.shields.io/github/stars/daneden/animate.css.svg?style=social&label=:" width="70" height="20" alt="img"></li>
<li>描述: “一个跨浏览器的 CSS 动画库。就像简单的东西一样容易使用。”</li>
<li>库大小: 43 kB</li>
<li>GitHub: <a href="https://github.com/daneden/animate.css" target="_blank" rel="external">https://github.com/daneden/animate.css</a></li>
<li>许可证: <img src="https://img.shields.io/github/license/daneden/animate.css.svg?style=social&label=:" width="114" height="20" alt="img"></li>
</ul>
<p>到 2017 年年中，它仍然是最流行、使用最广泛的CSS动画库之一。其压缩后的文件也非常小（16.6kb），也可以用于移动端网站。它在Github上拥有 4.2 万颗星，并且在许多大型项目中，它经常被打包成的一个组件。</p>
<p>Animate.css 在 4 年后仍然处于积极的发展阶段。这是最简单、最强大的动画库之一，我们可以毫不犹豫地在任何项目中使用它。</p>
<h1 id="Bounce-js"><a href="#Bounce-js" class="headerlink" title="Bounce.js"></a><a href="http://bouncejs.com/" target="_blank" rel="external">Bounce.js</a></h1><hr>
<p><a href="http://bouncejs.com/" target="_blank" rel="external">Bounce.js</a> 是一个 JavaScript 动画库，专注于为你的网站提供一种独特的有趣的、有弹性的、华纳兄弟式的动画。</p>
<p><img src="http://css88.b0.upaiyun.com/css88/2017/05/14948967652017-05-16-11.05.23.gif" alt="img"></p>
<ul>
<li>创建者: <a href="https://tictail.com/" target="_blank" rel="external">Tictail</a></li>
<li>发布: 2014</li>
<li>当前版本: <img src="https://img.shields.io/github/release/tictail/bounce.js.svg?style=social&amp;label=:" alt="img"></li>
<li>受欢迎程度: <img src="https://img.shields.io/github/stars/tictail/bounce.js.svg?style=social&amp;label=:" alt="img"></li>
<li>描述: “即刻创建漂亮的 CSS3 驱动的动画。”</li>
<li>库大小: 16 kB</li>
<li>GitHub: <a href="https://github.com/tictail/bounce.js" target="_blank" rel="external">https://github.com/tictail/bounce.js</a></li>
<li>许可证: <img src="https://img.shields.io/github/license/tictail/bounce.js.svg?style=social&amp;label=License" alt="img"></li>
</ul>
<p>Bounce.js是一个整齐的动画库，附有大约十个动画“预设”，因此图书馆的尺寸很小。和 animate.css 一样，动画流畅而完美。如果你的需求是 “pop and bubble(气泡和泡泡)” 样式的动画类型，并且希望降低文件大小的话 ，你可能想考虑使用这个库。</p>
<h1 id="AnimeJS"><a href="#AnimeJS" class="headerlink" title="AnimeJS"></a><a href="http://animejs.com/" target="_blank" rel="external">AnimeJS</a></h1><hr>
<p><a href="http://animejs.com/" target="_blank" rel="external">AnimeJS</a> 是我们榜单上唯一的新成，但自创作以来的12个月里，它赢得了众多的粉丝。它非常通用，功能强大，而且它也可以为 HTML 游戏动画提供动力。唯一真正的问题是，对于简单的 web 应用来说，它是否过度？</p>
<p>也许吧。但是，由于它的速度也很快，而且相对容易学习，所以很难找到它的缺点。</p>
<p>AnimeJS 被描述为一个轻量级的 JavaScript 动画库，可以与任何CSS属性、单独的 CSS transforms、SVG 或任何 DOM 属性以及 JavaScript 对象一起工作。它真的很棒 – 太棒了，事实上，我用 GIF 捕捉 下来的动画图无法对动作流畅和平滑做出公正的展示。</p>
<p><img src="http://css88.b0.upaiyun.com/css88/2017/05/14943144352017-05-09-17.18.32.gif" alt="img"></p>
<p>该项目可在 <a href="https://github.com/juliangarnier/anime" target="_blank" rel="external">GitHub</a> 上获得。</p>
<ul>
<li>创建者: <a href="https://github.com/juliangarnier" target="_blank" rel="external">Julian Garnier</a></li>
<li>发布: 2016</li>
<li>当前版本: <img src="https://img.shields.io/github/release/juliangarnier/anime.svg?style=social&amp;label=:" alt="img"></li>
<li>受欢迎程度: <img src="https://img.shields.io/github/stars/juliangarnier/anime.svg?style=social&amp;label=:" alt="img"></li>
<li>描述: “JavaScript 动画引擎。”</li>
<li>库大小: 16 kB</li>
<li>GitHub: <a href="https://github.com/juliangarnier/anime" target="_blank" rel="external">https://github.com/juliangarnier/anime</a></li>
<li>许可证: <img src="https://img.shields.io/github/license/juliangarnier/anime.svg?style=social&amp;label=License" alt="img"></li>
</ul>
<p>最令人印象深刻的是，Anime.JS 有令人惊叹的“文档”，演示 HTML，JavaScript 代码 和在一个漂亮的应用环境中使用案例。</p>
<p>简而言之，如果您对 JavaScript 动画解决方案很满意，那么就很难找到忽略 Anime.JS 的理由。</p>
<h1 id="Magic-Animations"><a href="#Magic-Animations" class="headerlink" title="Magic Animations"></a><a href="https://minimamente.com/example/magic_animations/" target="_blank" rel="external">Magic Animations</a></h1><hr>
<p><a href="https://minimamente.com/example/magic_animations/" target="_blank" rel="external">Magic Animations</a> 是最令人印象深刻的动画库之一，它有许多不同的动画，其中有许多是该库独有的。与 Animate.css 一样，你只需导入 Magic 的 CSS 文件即可。你也可以在 jQuery 中使用动画。该项目还提供了一个非常酷的演示程序。</p>
<p><img src="http://css88.b0.upaiyun.com/css88/2017/05/14948969152017-05-16-11.07.22.gif" alt="img"></p>
<ul>
<li>当前版本: <img src="https://img.shields.io/github/release/miniMAC/magic.svg?style=social&amp;label=:" alt="img"></li>
<li>受欢迎程度: <img src="https://img.shields.io/github/stars/miniMAC/magic.svg?style=social&amp;label=:" alt="img"></li>
<li>描述: “具有特效的CSS3动画”</li>
<li>库大小: 36.5 kB</li>
<li>GitHub: <a href="https://github.com/miniMAC/magic" target="_blank" rel="external">https://github.com/miniMAC/magic</a></li>
<li>许可证: <img src="https://img.shields.io/github/license/miniMAC/magic.svg?style=social&amp;label=License" alt="img"></li>
</ul>
<p>与 Animate.css 相比，Magic Animations 文件的大小适中。它的签名动画，如 magic 效果，foolish 效果和 bomb 效果非常有名。</p>
<p>如果你正在寻找一些不寻常的效果，我绝对会建议你在你的下一个项目中给这个动画库一个机会。肯定不会令你失望的。</p>
<h1 id="DynCSS"><a href="#DynCSS" class="headerlink" title="DynCSS"></a><a href="http://www.vittoriozaccaria.net/dyn-css/#what-is-it" target="_blank" rel="external">DynCSS</a></h1><hr>
<p><a href="http://www.vittoriozaccaria.net/dyn-css/#what-is-it" target="_blank" rel="external">DynCSS</a> 是一个视差效果的动画库，你可能喜欢在你的网站上使用这种效果。为了更清楚地了解如何使用这个库，看看这个<a href="http://www.vittoriozaccaria.net/dyncss-example/" target="_blank" rel="external">demo</a>。</p>
<p><img src="http://css88.b0.upaiyun.com/css88/2017/05/1450061540SzazG3O-new.jpg" alt="img"></p>
<ul>
<li>创建者: <a href="http://www.vittoriozaccaria.net/#/" target="_blank" rel="external">Vittorio Zaccaria</a></li>
<li>发布: 2014</li>
<li>当前版本: <img src="https://img.shields.io/github/release/vzaccaria/DynCSS.svg?style=social&amp;label=:" alt="img"></li>
<li>受欢迎程度: <img src="https://img.shields.io/github/stars/vzaccaria/DynCSS.svg?style=social&amp;label=:" alt="img"></li>
<li>描述: “使用动态 CSS 让你的网站活起来。”</li>
<li>GitHub: <a href="https://github.com/vzaccaria/DynCSS" target="_blank" rel="external">https://github.com/vzaccaria/DynCSS</a></li>
<li>许可协议: <img src="https://img.shields.io/github/license/vzaccaria/DynCSS.svg?style=social&amp;label=License" alt="img"></li>
</ul>
<p>DynCSS 是一个简单的库，在不久的将来可能会变得流行起来，但是它现在是一个相当新的项目，正如它在GitHub上的星星数量所展示的那样。这个库提供的一个很酷的功能是当滚动时给元素添加旋转效果，Vittorio 在 DynCSS 主页上展示了精湛的效果(这为视差相关的页面提供了一个完美的用例)。</p>
<h1 id="CSShake"><a href="#CSShake" class="headerlink" title="CSShake"></a><a href="http://elrumordelaluz.github.io/csshake/#1" target="_blank" rel="external">CSShake</a></h1><hr>
<p><a href="http://elrumordelaluz.github.io/csshake/#1" target="_blank" rel="external">CSShake</a> 提供了一个专门用于在网页中震荡元素的 CSS 库。正如您所期望的那样，您可以使用多种不同的变化来对 web 组件进行震荡。</p>
<ul>
<li>当前版本: <img src="https://img.shields.io/github/release/elrumordelaluz/csshake.svg?style=social&amp;label=:" alt="img"></li>
<li>受欢迎程度: <img src="https://img.shields.io/github/stars/elrumordelaluz/csshake.svg?style=social&amp;label=:" alt="img"></li>
<li>库大小: 78.8 kB</li>
<li>GitHub: <a href="https://github.com/elrumordelaluz/csshake" target="_blank" rel="external">https://github.com/elrumordelaluz/csshake</a></li>
<li>许可协议: <img src="https://img.shields.io/github/license/elrumordelaluz/csshake.svg?style=social&amp;label=License" alt="img"></li>
</ul>
<p>当用户输入不正确的时，苹果就会震荡某个 UI 元素(对话框，模态或文本框)以响应，就好像模仿一个人摇头表示 “不” 。CSShake 提供了一系列有趣的震荡动画，并且在这个库中变化不大（愚人码头注：效果相近）。</p>
<p>尽管目前，这个库比 DynCSS 更受欢迎，但我觉得可能因其增加了很多不必要的功能而使文件过大。虽然动画灵活的，但是我想不出太多的用例，在这些情况下，你仍然需要包含 DynCSS 动画库来进行非震荡的效果。</p>
<p>但也许只是我缺乏想象力？</p>
<h1 id="Hover-css"><a href="#Hover-css" class="headerlink" title="Hover.css"></a><a href="http://ianlunn.github.io/Hover/" target="_blank" rel="external">Hover.css</a></h1><hr>
<p><a href="http://ianlunn.github.io/Hover/" target="_blank" rel="external">Hover.css</a> 是一个 CSS 动画库，专为你的网站中使用的按钮和其他UI元素而设计。它有非常好的 2D 转换，还有许多其他精心制作的动画。</p>
<p><img src="http://css88.b0.upaiyun.com/css88/2017/05/14948971142017-05-16-11.10.32.gif" alt="img"></p>
<ul>
<li>当前版本: <img src="https://img.shields.io/github/release/IanLunn/Hover.svg?style=social&amp;label=:" alt="img"></li>
<li>受欢迎程度: <img src="https://img.shields.io/github/stars/IanLunn/Hover.svg?style=social&amp;label=:" alt="img"></li>
<li>描述: “轻松应用于于自己的元素，修改或仅用于灵感。”</li>
<li>库大小: 104.2 kB</li>
<li>GitHub: <a href="https://github.com/IanLunn/Hover" target="_blank" rel="external">https://github.com/IanLunn/Hover</a></li>
<li>许可协议: <img src="https://img.shields.io/github/license/IanLunn/Hover.svg?style=social&amp;label=License" alt="img"></li>
</ul>
<p>Hover.css 最适合用于页面中的小元素，例如按钮、Logo、SVG组件 或 要突显的图像，而不是更大、更复杂的页面动画。它有一个完整的动画案例列表，它的体积相对较大（但是，我仍然觉得这个体积可以更优化）。可以说，它最引人注目的动画效果是它独特的speech bubbles 和 curls 。</p>
<h1 id="Velocity-js"><a href="#Velocity-js" class="headerlink" title="Velocity.js"></a><a href="http://velocityjs.org/" target="_blank" rel="external">Velocity.js</a></h1><hr>
<p><a href="http://velocityjs.org/" target="_blank" rel="external">Velocity.js</a> 是另一种高级的、功能齐全的 JavaScript 动画套件，包括诸如淡入淡出、滚动、滚动、停止、结束、翻转等动画效果。</p>
<p>目前，它拥有一大批知名的公司用户，包括 Tumblr、WhatsApp、MailChimp、Scribd、Gap 和 HTC，因此你知道，这个类库已经经过了针对大型用户群和怪异边缘情况进行了测试。</p>
<p><img src="http://css88.b0.upaiyun.com/css88/2017/05/1450061570gvl0BB5-new.jpg" alt="img"></p>
<ul>
<li>创建者: <a href="https://www.julian.com/" target="_blank" rel="external">Julian Shapiro</a></li>
<li>发布: 2014</li>
<li>最近更新: <img src="https://img.shields.io/issuestats/p/github/julianshapiro/velocity.svg?style=social&amp;label=:" alt="img"></li>
<li>受欢迎程度: <img src="https://img.shields.io/github/stars/julianshapiro/velocity.svg?style=social&amp;label=:" alt="img"></li>
<li>描述: “加速JavaScript动画。”</li>
<li>库大小: 34.8 kB</li>
<li>GitHub: <a href="https://github.com/julianshapiro/velocity" target="_blank" rel="external">https://github.com/julianshapiro/velocity</a></li>
<li>许可证: <img src="https://img.shields.io/github/license/julianshapiro/velocity.svg?style=social&amp;label=License" alt="img"></li>
</ul>
<p>Velocity 可能并不适合某些人，因为它是一个 JavaScript 动画引擎，它实际上是一个使用与 jQuery 的  $.animate() 相同API的动画引擎。他既可以通过 jQuery 使用，也可以不通过 jQuery 使用。也就是说，它的速度非常快，它的特点包括 color animation, transforms, loops, easing – 从本质上来说，它是 jQuery 和 CSS transitions 最好组合。</p>
<h1 id="AniJS"><a href="#AniJS" class="headerlink" title="AniJS"></a><a href="http://anijs.github.io/" target="_blank" rel="external">AniJS</a></h1><hr>
<p>我们最后这个库独特的方法很有趣。<a href="http://anijs.github.io/" target="_blank" rel="external">AniJS</a> 是一个动画库，它允许你用简单的‘sentence-like’语句为元素添加动画。</p>
<p>采取以下格式：</p>
<p>最后这个库因其独特的方法而非常有趣。AniJS是一个动画库，允许你用下面的格式为元素添加动画效果：</p>
<p>If click, On Square, Do wobble animated To .container-box</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;div data-anijs=<span class="string">"if: click, do: flipInY, to: .container-box"</span>&gt;&lt;/div&gt;</div></pre></td></tr></table></figure>
<p>如果你对 JavaScript 不太熟悉，这可能是进入JS编排动作的好方法。</p>
<p><img src="http://css88.b0.upaiyun.com/css88/2017/05/14948977942017-05-16-11.19.29.gif" alt="img"></p>
<ul>
<li>创建者: <a href="https://github.com/anijs" target="_blank" rel="external">anijs</a></li>
<li>发布: 2014</li>
<li>最近更新: <img src="https://img.shields.io/issuestats/p/github/anijs/anijs.svg?style=social&amp;label=:" alt="img"></li>
<li>受欢迎程度: <img src="https://img.shields.io/github/stars/anijs/anijs.svg?style=social&amp;label=:" alt="img"></li>
<li>描述: “一个动画库，无需编码即可提升网页设计。”</li>
<li>库大小: 10.5 kB</li>
<li>GitHub: <a href="https://github.com/anijs/anijs" target="_blank" rel="external">https://github.com/anijs/anijs</a></li>
<li>许可证: <img src="https://img.shields.io/github/license/anijs/anijs.svg?style=social&amp;label=License" alt="img"></li>
</ul>
<p>AniJS 是一个功能是很合理的库。与其他动画库相比，它用于实现的格式是相当原始和与众不同的（其他许多库可能会发现非常规的使用）。</p>
<p>尽管如此，这个库还是值得一试，至少在你的项目中可以尝试一下。它可能缺乏一些竞争对手的整体实力和光环，但它有潜力会在未来越来越强大。</p>
<pre><code>愚人码头注：这里有一个 CSS3 动画集合项目，可以导出单个动画的 CSS3 样式，建议和 AniJS 配合使用。[AniCollection](http://anicollection.github.io/#/)
</code></pre><h1 id="你应该选哪个库？"><a href="#你应该选哪个库？" class="headerlink" title="你应该选哪个库？"></a>你应该选哪个库？</h1><hr>
<p>有许多动画库已经准备就绪，等待在您的项目中实现。上面列出的是一些具有最佳和最稳定的几个。</p>
<p>如果您正在寻找一个简单易用的强大的 CSS 解决方案。<strong>Animate.CSS</strong> 可能是最通用的、最适合使用的选项。</p>
<p>如果你正在寻找一个更完整、功能强大的JavaScript选项，<strong>VelocityJS</strong> 和 <strong>Anime.JS</strong> 不分伯仲。Velocity 目前拥有更多的动画实现 和 更大的使用量基础，但是对于 Anime.JS 这样一个新项目来说是令人难以置信的完美 和 令人激动的。目前，Anime.JS 美丽的文档可能足以赢得我们的青睐。</p>
<p>尽管在您的 web 应用程序中使用一个动画库可以提高交互性，但是过度使用它可能会违背用户的目的，并且经常使用户迷惑。请小心谨慎地使用它们。</p>
<p>转载：<a href="http://www.css88.com/archives/7389" target="_blank" rel="external">http://www.css88.com/archives/7389</a></p>
]]></content>
      
        
        <tags>
            
            <tag> css3 </tag>
            
            <tag> javaScript </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[windows使用git时出现：warning:LF will be replaced by CRLF]]></title>
      <url>/git-warning/</url>
      <content type="html"><![CDATA[<p>windows中的换行符为 CRLF，而在Linux下的换行符为LF，所以在执行add . 时出现提示，解决办法： </p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">rm -rf .git  <span class="comment">//删除.git</span></div><div class="line">git config --global core.autocrlf <span class="literal">false</span>  <span class="comment">//禁用自动转换</span></div></pre></td></tr></table></figure>
<p>然后重新执行： </p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git init</div><div class="line">git add .</div></pre></td></tr></table></figure>
<p>转载：<a href="http://blog.csdn.net/unityoxb/article/details/20768687" target="_blank" rel="external">http://blog.csdn.net/unityoxb/article/details/20768687</a></p>
]]></content>
      
        
        <tags>
            
            <tag> warning:LF will be replaced by CRLF </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[零基础搭建免费Hexo个人博客并部署到Github]]></title>
      <url>/hexo-blog/</url>
      <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>博客系统有很多，每一个的搭建方式也各有特色，也看了不少的教程和方法，但是总觉得或多或少都有些坑，因为每个人出的问题不一样，所以侧重点也不尽相同，也可能我写的也有很多坑，但是我根据我的实际情况记录下我的过程和我可能容易忽略的地方，针对的对象是0基础的小小白，不求一语道破天机，只愿过程无缝跟进，所以我话语说的比较啰嗦点，尽量多上图，有不足之处请各位看官多多提出宝贵意见为谢！好了，其他不多说，进入正题：<br>国际惯例，简单说下Hexo：</p>
<h2 id="什么是-Hexo？"><a href="#什么是-Hexo？" class="headerlink" title="什么是 Hexo？"></a>什么是 Hexo？</h2><p>官方给的解释是：Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p>
<h2 id="Hexo的好处？"><a href="#Hexo的好处？" class="headerlink" title="Hexo的好处？"></a>Hexo的好处？</h2><p>在官方的文档中并没有说自己的博客系统多么多么牛XX，而是直接进入正题</p>
<h2 id="Hexo官方文档"><a href="#Hexo官方文档" class="headerlink" title="Hexo官方文档"></a>Hexo官方文档</h2><p>英文原版文档：<br><a href="https://hexo.io/docs/index.html" target="_blank" rel="external">https://hexo.io/docs/index.html</a><br>中文文档：<br><a href="https://hexo.io/zh-cn/docs/index.html" target="_blank" rel="external">https://hexo.io/zh-cn/docs/index.html</a></p>
<p>简单说下整体流程，做到心中有数：<br>node.js—&gt;git—&gt;Hexo—&gt;部署到github</p>
<h2 id="开始："><a href="#开始：" class="headerlink" title="开始："></a>开始：</h2><p>说明：因为我自己电脑是windows 10，所以一下所有内容都是在windows下操作。</p>
<blockquote>
<p>1.安装环境（node.js环境和git环境）</p>
</blockquote>
<p>两个环境，其实就是两个软件，从官方下载安装包，一路 “下一步”安装完成，这里不再过多赘述；<br>软件版本大同小异，不用太纠结（我现在node版本是V6.10.2），地址：</p>
<p>git官网：<a href="https://git-scm.com/" target="_blank" rel="external">https://git-scm.com/</a><br>node.js官网：<a href="https://nodejs.org/" target="_blank" rel="external">https://nodejs.org/</a></p>
<blockquote>
<p>2.验证软件是否安装成功</p>
</blockquote>
<p>键盘快捷键win+r（或者鼠标“开始菜单”点击“运行”），打开“运行”窗口，键入“cmd”<br><img src="/img/102844jnd4ddb4eduond43.jpg" alt="img"></p>
<p>键盘“回车”（或者点击“确定”），会弹出命令行界面，然后依次分别键入 ：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">git --version</div><div class="line">node -v</div><div class="line">npm -v</div></pre></td></tr></table></figure></p>
<h3 id="注意：git空格之后是两个横杠"><a href="#注意：git空格之后是两个横杠" class="headerlink" title="注意：git空格之后是两个横杠"></a>注意：git空格之后是两个横杠</h3><p>如图：<br><img src="/img/102941w1gwkjge0950001k.jpg" alt="img"></p>
<p>确认我们软件环境没有问题的话，我们就可以继续下一步了。</p>
<blockquote>
<p>3.注册github账号</p>
</blockquote>
<ul>
<li>进入github官网（<a href="https://github.com/）进行注册账号，用户名，邮箱，密码，然后点击注册：" target="_blank" rel="external">https://github.com/）进行注册账号，用户名，邮箱，密码，然后点击注册：</a><br>零基础搭建免费Hexo个人博客并部署到Github（上）</li>
</ul>
<p><img src="/img/175702t3icl4ihbuzddxu2.jpg" alt="img"></p>
<ul>
<li>直接选择免费的就可以(因为我已经注册过了，为了截图，我就随便编了一个号，打个码，证明我不是故意的emoticon)：<br>零基础搭建免费Hexo个人博客并部署到Github（上）</li>
</ul>
<p><img src="/img/180051nnzgn560ime2n323.jpg" alt="img"></p>
<ul>
<li>下面其他内容，根据自己的情况，想填填，不想直接点击下面的按钮即可<br>零基础搭建免费Hexo个人博客并部署到Github（上）</li>
</ul>
<p><img src="/img/180317gzbe0dxxmmom4xoo.jpg" alt="img"></p>
<ul>
<li>你注册的邮箱会有收到一个邮件，然后按照提示，激活下就可以了<br>（此处图略）</li>
</ul>
<blockquote>
<p>4.Github新建项目</p>
</blockquote>
<p>注册成功之后，你就可以新建项目了；</p>
<ul>
<li>在导航条右上角，点击“+”，选择，”New repository”点击，新建一个版本库<br>零基础搭建免费Hexo个人博客并部署到Github（上）</li>
</ul>
<p><img src="/img/180946ytqq1sujwysuquus.jpg" alt="img"></p>
<ul>
<li>在Repository name下面填写下yourname.github.io(yourname与你的注册用户名一致,这样yourname.github.io这个就是你博客的域名了)，然后点击下面的绿色按钮，创建这个仓库<br>新建git仓库</li>
</ul>
<p><img src="/img/104235vrnduf8fdg7f8rdi.jpg" alt="img"></p>
<ul>
<li>你会看到下图这个界面，这里有你的github地址的Quick setup，你可以点击右边的按钮复制这个链接到剪切板<br>git仓库链接</li>
</ul>
<p><img src="/img/104458ffiqfdops2ypnopm.jpg" alt="img"></p>
<p>到此，你github上的设置基本就结束了。</p>
<blockquote>
<p>5.简历本地项目目录，修改镜像源</p>
</blockquote>
<p>以上都搞定只有，回到你本地环境；</p>
<ul>
<li>在电脑上人任意找个合适的位置新建一个文件夹（名字不要为中文就好，比如我在F盘新建文件夹，取名叫Git），用来存放你的博客系统：<br>git文件夹</li>
</ul>
<p><img src="/img/104839gwprl3fm2frfl0xr.jpg" alt="img"></p>
<ul>
<li>然后进入这个文件夹，任意位置右键单击，选择 “Git bash here”，之后会弹出一个命令行的弹框<br>右键git bash</li>
</ul>
<p><img src="/img/105242yn6s6p281rsj674t.jpg" alt="img"></p>
<ul>
<li>之后就是我们用集成的npm安装Hexo了，但是npm在国内不是很文档，经常被“qiang”，保险起见，我把npm镜像修改为国内淘宝镜像（cnpm）</li>
</ul>
<h3 id="说明：npm和cnpm：npm原版的叫npm，用淘宝的镜像的话，换了一个马甲，叫cnpm，使用方法就是把之前的npm替换为cnpm而已，如果你用vpn后者其他条件，请忽略这一步；"><a href="#说明：npm和cnpm：npm原版的叫npm，用淘宝的镜像的话，换了一个马甲，叫cnpm，使用方法就是把之前的npm替换为cnpm而已，如果你用vpn后者其他条件，请忽略这一步；" class="headerlink" title="说明：npm和cnpm：npm原版的叫npm，用淘宝的镜像的话，换了一个马甲，叫cnpm，使用方法就是把之前的npm替换为cnpm而已，如果你用vpn后者其他条件，请忽略这一步；"></a>说明：npm和cnpm：npm原版的叫npm，用淘宝的镜像的话，换了一个马甲，叫cnpm，使用方法就是把之前的npm替换为cnpm而已，如果你用vpn后者其他条件，请忽略这一步；</h3><p>cnpm官网：<a href="http://npm.taobao.org/" target="_blank" rel="external">http://npm.taobao.org/</a></p>
<p>具体命令：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install -g cnpm --registry=https:<span class="comment">//registry.npm.taobao.org</span></div></pre></td></tr></table></figure></p>
<p><img src="/img/110559zj9be5w3jswejcqj.jpg" alt="img"></p>
<p>以后所有npm的命令，我们这里都可以用cnpm代替。</p>
<blockquote>
<p>6.安装Hexo系统</p>
</blockquote>
<ul>
<li>我们就可以使用cnpm来安装Hexo了，命令：<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cnpm install -g hexo-cli</div></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="/img/111557y055a9b1qb00evew.jpg" alt="img"></p>
<ul>
<li>继续输入命令：<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cnpm install hexo --save</div></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="/img/111557y055a9b1qb00evew.jpg" alt="img"></p>
<p>到此为止我们就把Hexo安装完毕了；</p>
<ul>
<li>为了确保我们安装成功，我们验证下（原理很简单，我们能看到 Hexo的版本号就说明安装成功了）：<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">检测hexo版本</div></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="/img/112001fgq5eyl05qexe5v5.jpg" alt="img"></p>
<p>好了，到此为止，我们安装Hexo的任务就算完成。</p>
<blockquote>
<p>7.本地测试Hexo系统</p>
</blockquote>
<p>Hexo的使用，是先在我们本地运行，运行没有问题d，然后再同步到我们的其他托管平台（比如github）<br>接下来我们来对Hexo具体操作：</p>
<ul>
<li>因为是第一次使用，所以首先我们先初始化hexo，命令是：<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo init</div></pre></td></tr></table></figure>
</li>
</ul>
<p>如果第一次初始化失败，可以多尝试几次，因为我已经安装过，所以截图我的可能和大家的有些许出入，但是最后的结果是一样的，初始化可能稍微慢几秒，请耐心等待下下。</p>
<p><img src="/img/114106jowdmdjsty1o88s7.jpg" alt="img"></p>
<ul>
<li>接下来，安装生成器，命令行：<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cnpm install</div></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="/img/114551vd8h8b5nw0yujnru.jpg" alt="img"></p>
<p>到此为止，我们本地一安装hexo已经完毕；</p>
<ul>
<li>我们可以运行hexo系统试下，命令是：<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo s -g</div></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="/img/114813aeed1lk7kk1htubl.jpg" alt="img"></p>
<ul>
<li>然后打开我们的浏览器，在地址栏输入<a href="http://localhost:4000/，见证奇迹的时刻" target="_blank" rel="external">http://localhost:4000/，见证奇迹的时刻</a></li>
</ul>
<p><img src="/img/115012l7le4s37ej3svv6u.jpg" alt="img"></p>
<p>如果想停止，只需在命令行界面中按住键盘上ctrl+c 即可</p>
<blockquote>
<p>8.本地使用Hexo发布文章</p>
</blockquote>
<p>Hexo系统能跑通了之后，接下来我们一起操作下hexo，首先，写一篇文章</p>
<ul>
<li>输入创建文章命令，会生成一个md文件(具体生成的文件路径是：/blog/source/_posts/)，具体操作命令是：<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo <span class="keyword">new</span> <span class="string">"我的第一篇文章"</span></div></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="/img/115259x3a5rg49v1k59j9k.jpg" alt="img"></p>
<ul>
<li>然后我们就可以编辑下我们的博客文章内容了，当然你如果会vim或者vi的话，可以直接进入编辑，我这里用比较直观的sublime软件进行编辑（当然用其他编辑器也可以，不要用记事本）</li>
</ul>
<p><img src="/img/115420lhgo5o7253gg2hs2.jpg" alt="img"></p>
<ul>
<li>编辑完之后,我们需要生成我们的文章，回到我们的命令行，ctrl+c结束我hexo运行（不结束我们无法进行继续在当前命令行操作），当然我们也可以在Git的根目录下重新右键 Git bash here 开一个命令行，<br>在命令行，键入：<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo g -d</div></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="/img/120251li86ipnx685pu88i.jpg" alt="img"></p>
<ul>
<li>此时，如果你是新建命令行窗口的话，那么直接在你浏览器刷新就可以；</li>
</ul>
<p>如果没有新建命令行窗口的话，你需要重新打开hexo服务，键入命令：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo s -g</div></pre></td></tr></table></figure></p>
<p><img src="/img/120510gn9ohcrfrrozxfca.jpg" alt="img"></p>
<p>好了，到此为止，我们本地运行hexo博客就先到这里了。</p>
<blockquote>
<p>9.本地Hexo系统发布到Github</p>
</blockquote>
<p>接下来，我们就是把本地的hexo博客系统发布到github上，如果纯粹的用git命令commit提交，是不可以的，会有各种报错，因为我们的博客系统有很多特殊的文件，不是一般普通文件，所以我们需要借助ssh keys</p>
<ul>
<li>设置本地ssh keys</li>
</ul>
<p>首先，我们需要先在本地生成一个ssh keys，在命令行键入：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh-keygen -t rsa -C <span class="string">"邮件地址@youremail.com"</span></div></pre></td></tr></table></figure></p>
<h3 id="注意：-这里的-C-是大写"><a href="#注意：-这里的-C-是大写" class="headerlink" title="注意： 这里的-C 是大写"></a>注意： 这里的-C 是大写</h3><p>之后会有一个提示，直接输入回车就好；</p>
<ul>
<li><p>再然后会让你输入密码，这个密码表示在你提交项目的时候，进行的密码验证，防止别人往你项目中提交内容，如果为空的话提交项目时则不用输入，<br>如果你想输入的话，就输入一下，注意，输入密码的时候没有*字样的，你直接输入就可以了，输入完毕之后直接敲回车，会提示你再次输入密码进行确认；<br>我这里就不设置密码了，所以直接一路回车下去；</p>
</li>
<li><p>最后看到这样的界面，就成功设置ssh keys了：</p>
</li>
</ul>
<p><img src="/img/120912xdlsfzdtwa0l2xz0.jpg" alt="img"></p>
<p>说明：因为我电脑之前设置过ssh keys，所以多了一步重新写入新的key的提示；</p>
<p>本机设置完ssh keys，需要和你的github账号进行绑定关联，才能成功把你本地的环境连接到github上；</p>
<blockquote>
<p>10.添加SSH Key到GitHub</p>
</blockquote>
<ul>
<li>首先，需要找到本地的keys的位置，一般路径是C:\Documents and Settings\Administrator.ssh这个文件夹下（如果隐藏，请显示所有文件和文件夹，具体方法就不在赘述），我的是win10，所以，我的路径是：</li>
</ul>
<p><img src="/img/121131wyzoo4bm4yj79non.jpg" alt="img"></p>
<h3 id="这里说明下，id-rsa-是私钥，id-rsa-pub是公钥"><a href="#这里说明下，id-rsa-是私钥，id-rsa-pub是公钥" class="headerlink" title="这里说明下，id_rsa 是私钥，id_rsa.pub是公钥"></a>这里说明下，id_rsa 是私钥，id_rsa.pub是公钥</h3><ul>
<li>然后用编辑器（不要用记事本），打开id_rsa.pub公钥文件，如图：</li>
</ul>
<p><img src="/img/210852kodxfix33e2hdqed.jpg" alt="img"></p>
<ul>
<li>接下来就是把这个公钥内容绑定到github上，ctrl+a，复制所有内容，打开github，找到setting–&gt;SSH and GPG keys–&gt;New SSH key，然后填入对应的内容（title随便填，key就是你复制的那一堆），点击 add ssh key，然后会让你再次输入github密码进行确认，如图：</li>
</ul>
<p><img src="/img/121356si1usu2kw7z0llk9.jpg" alt="img"><br><img src="/img/211338mpb6plcq6ppcocml.jpg" alt="img"><br><img src="/img/211338izbprpvvey6scdmy.jpg" alt="img"><br><img src="/img/211855q79b7zl9toplxmqm.jpg" alt="img"></p>
<p>成功之后，理论上你会收到一个邮件，意思是表示你添加了一个ssh key完成；</p>
<ul>
<li>为了验证是否配置成功，我们可以测试下，复制如下代码（注意T是大写）:<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh -T git@github.com</div></pre></td></tr></table></figure>
</li>
</ul>
<p>如果成功，会有你会看到下图：</p>
<p><img src="/img/121926nvv27ev92777rab7.jpg" alt="img"></p>
<blockquote>
<p>11.本地数据同步到github</p>
</blockquote>
<ul>
<li>首先，在命令行中配置github信息，分别键入以下两条命令：<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git config --global user.name <span class="string">"你的用户名"</span></div><div class="line">git config --global user.email <span class="string">"你的邮箱"</span></div></pre></td></tr></table></figure>
</li>
</ul>
<p>这两行代码运行之后没有任何反应，这个是正常的，如图</p>
<p><img src="/img/223013e8iz97899hyvaw99.jpg" alt="img"></p>
<ul>
<li>接下来，安装hexo git插件，命令：<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cnpm install hexo-deployer-git --save</div></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="/img/122221xisnj6ebptazduud.jpg" alt="img"></p>
<ul>
<li>然后，在正式部署之前，我们需要修改下hexo的部署文件_config.yml，路径就在你建立博客的文件夹的根目录</li>
</ul>
<p><img src="/img/224216vi8m26ri99z99d8o.jpg" alt="img"></p>
<p>用sublime打开下这个文件，里面的内容很多，具体每一个代表什么意思，hexo文档中有详细解释，我们只需要修改url和最后几个参数就可以了，如图：</p>
<p><img src="/img/122631v83dvh1pnmp0v18d.jpg" alt="img"><br><img src="/img/122629l3zst66atc2q3eg3.jpg" alt="img"></p>
<p>注：<br>1.打码处为自己的github用户名；<br>2.修改_config.yml文件的时候，注意deploy，URL等标签，在每个冒号后面必须要空格，否则后面的命令会没有反应或者报错（此处感谢简书@Raspberry）；<br>3.缩进要用空格，不能用tab键缩进；</p>
<p>保存之后，就剩下我们最后一步了；</p>
<ul>
<li>在我们的命令行中，键入：<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo d -g</div></pre></td></tr></table></figure>
</li>
</ul>
<p>会有一段很长的代码（截图长度有限，所以这里只贴出头部和尾部）：</p>
<p><img src="/img/230835hnpvzl68669nd969.jpg" alt="img"></p>
<blockquote>
<p>12.见证奇迹的时刻：</p>
</blockquote>
<p>在浏览器中打开网址：“yourname.github.io”</p>
<p><img src="/img/123258fqyhbr6a47yoobxn.jpg" alt="img"></p>
<p>转载：<a href="http://www.qdfuns.com/notes/14464/5c9705f6721e0a1357fdf990eee64cbd.html" target="_blank" rel="external">http://www.qdfuns.com/notes/14464/5c9705f6721e0a1357fdf990eee64cbd.html</a></p>
]]></content>
      
        <categories>
            
            <category> 前端 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 搭建免费Hexo个人博客 </tag>
            
            <tag> 搭建免费Hexo个人博客并部署到Github </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
